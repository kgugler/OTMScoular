<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="BCO_LOAD_PLAN" description="BCO Load Plan" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <parameters>
    <parameter name="LOC_CODE" dataType="character" />
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_PARAMS"><![CDATA[SELECT :LOC_CODE loc_cd FROM DUAL]]></sqlStatement>
    <sqlStatement name="Q_ROWS1"><![CDATA[SELECT
  cv.charter_voyage_xid booking_num1,
  (CASE WHEN NOT cvref1.charter_voyage_refnum_value IS NULL THEN
    20
  WHEN NOT cvref2.charter_voyage_refnum_value IS NULL OR NOT cvref3.charter_voyage_refnum_value IS NULL THEN
    40
  ELSE
    NULL
  END)
  size1,
  (CASE WHEN NOT cvref1.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(cvref1.charter_voyage_refnum_value)
  WHEN NOT cvref2.charter_voyage_refnum_value IS NULL OR NOT cvref3.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(NVL(cvref2.charter_voyage_refnum_value,'0')) + TO_NUMBER(NVL(cvref3.charter_voyage_refnum_value,'0'))
  ELSE
    NULL
  END)
  boxes1,
  loc1.city || ' ' || loc1.province_code
  origin_port_ramp1,
  loc2.city
  dest_port1,
  loc3.location_xid
  carrier1,
  TO_CHAR(TO_DATE(cvref4.charter_voyage_refnum_value,'MM-DD-YY'),'MM/DD/YYYY')
  cut_date1,
  (CASE WHEN cv.source_location_gid IS NULL THEN
    TO_CHAR(cv.departure_date,'MM/DD/YYYY')
  ELSE
    TO_CHAR(glogowner.utc.get_local_date(cv.departure_date,cv.source_location_gid),'MM/DD/YYYY')
  END)
  sail_date1,
  (CASE WHEN cv.dest_location_gid IS NULL THEN
    TO_CHAR(cv.arrival_date,'MM/DD/YYYY')
  ELSE
    TO_CHAR(glogowner.utc.get_local_date(cv.arrival_date,cv.dest_location_gid),'MM/DD/YYYY')
  END)
  eta1,  
  (CASE WHEN NOT cvref5.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(cvref5.charter_voyage_refnum_value)
  WHEN NOT cvref6.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(cvref6.charter_voyage_refnum_value)
  WHEN NOT cvref7.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(cvref7.charter_voyage_refnum_value)
  WHEN NOT cvref8.charter_voyage_refnum_value IS NULL THEN
    TO_NUMBER(cvref8.charter_voyage_refnum_value) 
  ELSE
    NULL
  END)
  cost1
FROM
  charter_voyage cv
INNER JOIN
  consol con ON cv.charter_voyage_gid = con.charter_voyage_gid  
INNER JOIN
  charter_voyage_refnum cvr ON cv.charter_voyage_gid = cvr.charter_voyage_gid  
AND
  cvr.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_LOC_CODE'   
LEFT OUTER JOIN
  charter_voyage_refnum cvref1 ON cv.charter_voyage_gid = cvref1.charter_voyage_gid
AND
  cvref1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_TEU COUNT'
LEFT OUTER JOIN
  charter_voyage_refnum cvref2 ON cv.charter_voyage_gid = cvref2.charter_voyage_gid
AND
  cvref2.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FT COUNT'  
LEFT OUTER JOIN
  charter_voyage_refnum cvref3 ON cv.charter_voyage_gid = cvref3.charter_voyage_gid
AND
  cvref3.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTHC COUNT'  
LEFT OUTER JOIN
  charter_voyage_refnum cvref4 ON cv.charter_voyage_gid = cvref4.charter_voyage_gid
AND
  cvref4.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_START RAMP CUTOFF TIME' 
LEFT OUTER JOIN
  charter_voyage_refnum cvref5 ON cv.charter_voyage_gid = cvref5.charter_voyage_gid
AND
  cvref5.charter_voyage_refnum_qual_gid = 'SCOULAR.TEU_COST_USER'   
LEFT OUTER JOIN
  charter_voyage_refnum cvref6 ON cv.charter_voyage_gid = cvref6.charter_voyage_gid
AND
  cvref6.charter_voyage_refnum_qual_gid = 'SCOULAR.TEU_COST_SYSTEM'    
LEFT OUTER JOIN
  charter_voyage_refnum cvref7 ON cv.charter_voyage_gid = cvref7.charter_voyage_gid
AND
  cvref7.charter_voyage_refnum_qual_gid = 'SCOULAR.FEU_COST_USER'    
LEFT OUTER JOIN
  charter_voyage_refnum cvref8 ON cv.charter_voyage_gid = cvref8.charter_voyage_gid  
AND
  cvref8.charter_voyage_refnum_qual_gid = 'SCOULAR.FEU_COST_SYSTEM'    
LEFT OUTER JOIN
  location loc1 ON cv.source_location_gid = loc1.location_gid
LEFT OUTER JOIN
  location loc2 ON cv.dest_location_gid = loc2.location_gid
LEFT OUTER JOIN
  location loc3 ON cv.servprov_gid = loc3.location_gid
WHERE NOT
  cv.is_cancelled = 'Y'
AND
  (NOT NVL(con.allocated_num_teu,0) = NVL(con.max_num_teu,0)
OR
  NOT NVL(con.allocated_num_feu,0) = NVL(con.max_num_feu,0))
AND
  cvr.charter_voyage_refnum_value = :LOC_CODE
ORDER BY 
  TO_DATE(cvref4.charter_voyage_refnum_value,'MM-DD-YY') ASC]]></sqlStatement>
    <sqlStatement name="Q_ROWS2"><![CDATA[SELECT DISTINCT
  sref4.shipment_refnum_value,
  sref1.shipment_refnum_value
  contract_num2,
  srn.shipment_refnum_value
  booking_num2,
  sref2.shipment_refnum_value
  transloader2,
  loc1.city
  origin_city2,
  loc2.city
  destination2,
  loc3.location_xid
  carrier2,
  con.contact_xid
  customer2,
  sref3.shipment_refnum_value
  commodity2,
  TO_CHAR(TO_DATE(sref4.shipment_refnum_value,'MM/DD/YY'),'MM/DD/YYYY')
  cut_date2,
  TO_CHAR(s.sail_date,'MM/DD/YYYY')
  sail_date2,
  TO_CHAR(s.port_discharge_eta,'MM/DD/YYYY')
  eta2,
  TO_NUMBER((SELECT COUNT(ssu.s_ship_unit_gid)
  FROM shipment_stop_d sstopd
  INNER JOIN s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE sstopd.shipment_gid = s.shipment_gid AND sstopd.stop_num = 1))
  container_count2,
  (CASE WHEN NOT cvref1.charter_voyage_refnum_value IS NULL THEN
    20
  WHEN NOT cvref2.charter_voyage_refnum_value IS NULL OR NOT cvref3.charter_voyage_refnum_value IS NULL THEN
    40
  ELSE
    NULL
  END)
  size2,
  TO_NUMBER(sref5.shipment_refnum_value)
  cost_container2,
  s.shipment_xid
  shipment_id2
FROM
  shipment s
INNER JOIN
  shipment_s_equipment_join ssej ON s.shipment_gid = ssej.shipment_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj ON ssej.s_equipment_gid = sessuj.s_equipment_gid
INNER JOIN
  s_ship_unit_line ssul ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
  ob_order_base oob ON ssul.order_base_gid = oob.order_base_gid  
INNER JOIN
	shipment_refnum sref ON sref.shipment_gid = s.shipment_gid
AND
	sref.shipment_refnum_qual_gid = 'SCOULAR.LOC_CODE'  
LEFT OUTER JOIN
	shipment_refnum srn ON s.shipment_gid = srn.shipment_gid
AND
	srn.shipment_refnum_qual_gid = 'CHARTER VOYAGE'
LEFT OUTER JOIN
	charter_voyage cv ON cv.charter_voyage_gid = 'SCOULAR/BCO.' || srn.shipment_refnum_value  
LEFT OUTER JOIN
  charter_voyage_refnum cvref1 ON cv.charter_voyage_gid = cvref1.charter_voyage_gid
AND
  cvref1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_TEU COUNT'
LEFT OUTER JOIN
  charter_voyage_refnum cvref2 ON cv.charter_voyage_gid = cvref2.charter_voyage_gid
AND
  cvref2.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FT COUNT'  
LEFT OUTER JOIN
  charter_voyage_refnum cvref3 ON cv.charter_voyage_gid = cvref3.charter_voyage_gid
AND
  cvref3.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTHC COUNT'    
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
	sref1.shipment_refnum_qual_gid = 'SCOULAR/BCO.CONTRACT NO'    
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
	sref2.shipment_refnum_qual_gid = 'SCOULAR/BCO.TRANSLOADER LOCATION NAME'      
LEFT OUTER JOIN
	shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
	sref3.shipment_refnum_qual_gid = 'SCOULAR.COMMODITY'     
LEFT OUTER JOIN
	shipment_refnum sref4 ON s.shipment_gid = sref4.shipment_gid
AND
	sref4.shipment_refnum_qual_gid = 'SCOULAR/BCO.RAMP OR PORT CUT DATE'   
LEFT OUTER JOIN
	shipment_refnum sref5 ON s.shipment_gid = sref5.shipment_gid
AND
	sref5.shipment_refnum_qual_gid = 'SCOULAR.COST PER CONTAINER'    
LEFT OUTER JOIN
  location loc1 ON s.source_location_gid = loc1.location_gid
LEFT OUTER JOIN
  location loc2 ON s.dest_location_gid = loc2.location_gid
LEFT OUTER JOIN
  location loc3 ON s.servprov_gid = loc3.location_gid 
LEFT OUTER JOIN
  shipment_involved_party sip ON s.shipment_gid = sip.shipment_gid
AND
  sip.involved_party_qual_gid = 'CUSTOMER'
LEFT OUTER JOIN
  contact con ON sip.involved_party_contact_gid = con.contact_gid
WHERE
  s.domain_name = 'SCOULAR/BCO'
AND
  s.shipment_type_gid = 'TRANSPORT'
AND
  SUBSTR(oob.order_base_xid, 1, 1) = 'S'
AND
  sref.shipment_refnum_value = :LOC_CODE
AND EXISTS
  (SELECT 
    ssu.tag_3 
  FROM 
    shipment_stop_d ssd 
  INNER JOIN 
    s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid 
  WHERE 
    ssd.shipment_gid = s.shipment_gid 
  AND 
    ssd.stop_num = 1 
  AND 
    ssu.tag_3 IS NULL)
ORDER BY
  TO_DATE(sref4.shipment_refnum_value,'MM-DD-YY')]]></sqlStatement>
    <sqlStatement name="Q_ROWS3"><![CDATA[SELECT 
  obref1.ob_refnum_value
  commodity3,
  oob.order_base_xid
  order_id3,
  con.contact_xid
  buyer3,
  loc.city
  dest_port3,
  TO_CHAR(oob.insert_date, 'MM/DD/YYYY')
  contract_date3,
  TO_CHAR(obl.early_pickup_date, 'MM/DD/YYYY')
  begin_date3,
  TO_CHAR(obl.late_delivery_date, 'MM/DD/YYYY')
  end_date3,  
  obref2.ob_refnum_value || ' / ' || obref3.ob_refnum_value
  tolerance3,
  ROUND(obl.weight_base / 2204.5855379,2)
  original_quantity3,
  ROUND((obl.weight_base / 2204.5855379) - NVL((SELECT SUM(wt.weight) FROM
  (SELECT DISTINCT ssu1.s_ship_unit_gid,
  ((CASE WHEN ssu1.tag_3 IS NULL THEN 
    0
  ELSE 
    ssu1.unit_net_weight_base
  END) / 2204.5855379) weight
  FROM s_ship_unit_line ssul1
  INNER JOIN shipment_stop_d ssd1 ON ssd1.s_ship_unit_gid = ssul1.s_ship_unit_gid
  AND ssd1.stop_num = 1
  INNER JOIN s_ship_unit ssu1 ON ssu1.s_ship_unit_gid = ssd1.s_ship_unit_gid  
  WHERE ssul1.order_base_gid = oob.order_base_gid) wt),0),2)
  balance3,
  NVL(ROUND((SELECT SUM(wt.weight) FROM
  (SELECT DISTINCT ssu1.s_ship_unit_gid,
  ((CASE WHEN ssu1.tag_3 IS NULL THEN 
    ssu1.unit_net_weight_base
  ELSE 
    0
  END) / 2204.5855379) weight
  FROM s_ship_unit_line ssul1
  INNER JOIN shipment_stop_d ssd1 ON ssd1.s_ship_unit_gid = ssul1.s_ship_unit_gid
  AND ssd1.stop_num = 1
  INNER JOIN s_ship_unit ssu1 ON ssu1.s_ship_unit_gid = ssd1.s_ship_unit_gid  
  WHERE ssul1.order_base_gid = oob.order_base_gid) wt),2),0)
  planned_quantity3,
  TO_CHAR(ROUND(TO_NUMBER(obref4.ob_refnum_value),2),'99999990.00') || ' / ' || obref5.ob_refnum_value
  price3,
  obref6.ob_refnum_value
  pay_terms3,
  obref7.ob_refnum_value
  free_time_notes3,
  obref8.ob_refnum_value
  equip_text3,
  obref9.ob_refnum_value
  weight_text3,
  obrem.remark_text
  logistics_notes3,
  obref10.ob_refnum_value
  carrier_constraint3  
FROM
  ob_order_base oob
INNER JOIN
  ob_refnum obref ON oob.order_base_gid = obref.order_base_gid
AND
  obref.ob_refnum_qual_gid = 'SCOULAR.LOC_CODE'
LEFT OUTER JOIN
  ob_line obl ON oob.order_base_gid = obl.order_base_gid
AND
  ROWNUM = 1
LEFT OUTER JOIN
  ob_refnum obref1 ON oob.order_base_gid = obref1.order_base_gid
AND
  obref1.ob_refnum_qual_gid = 'SCOULAR.COMMODITY'
LEFT OUTER JOIN
  ob_refnum obref2 ON oob.order_base_gid = obref2.order_base_gid
AND
  obref2.ob_refnum_qual_gid = 'SCOULAR.TOLERANCE_MORE'
LEFT OUTER JOIN
  ob_refnum obref3 ON oob.order_base_gid = obref3.order_base_gid
AND
  obref3.ob_refnum_qual_gid = 'SCOULAR.TOLERANCE_LESS'
LEFT OUTER JOIN
  ob_refnum obref4 ON oob.order_base_gid = obref4.order_base_gid
AND
  obref4.ob_refnum_qual_gid = 'SCOULAR.CONTRACT_PRICE'
LEFT OUTER JOIN
  ob_refnum obref5 ON oob.order_base_gid = obref5.order_base_gid
AND
  obref5.ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM'
LEFT OUTER JOIN
  ob_refnum obref6 ON oob.order_base_gid = obref6.order_base_gid
AND
  obref6.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB PAYTERM_CUST PAYTERMS'
LEFT OUTER JOIN
  ob_refnum obref7 ON oob.order_base_gid = obref7.order_base_gid
AND
  obref7.ob_refnum_qual_gid = 'SCOULAR.FREE_TIME' 
LEFT OUTER JOIN
  ob_refnum obref8 ON oob.order_base_gid = obref8.order_base_gid
AND
  obref8.ob_refnum_qual_gid = 'SCOULAR/BCO.EQUIPMENT_CONSTRAINT_TEXT'
LEFT OUTER JOIN
  ob_refnum obref9 ON oob.order_base_gid = obref9.order_base_gid
AND
  obref9.ob_refnum_qual_gid = 'SCOULAR/BCO.CONSTRAINT_WEIGHT_TEXT'
LEFT OUTER JOIN
  ob_refnum obref10 ON oob.order_base_gid = obref10.order_base_gid
AND
  obref10.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB HEADER_CARRIER CONSTRAINT' 
LEFT OUTER JOIN
  ob_remark obrem ON oob.order_base_gid = obrem.order_base_gid
AND
  obrem.remark_qual_gid = 'SCOULAR.ADDITIONAL NOTES'
LEFT OUTER JOIN
  ob_involved_party obip ON oob.order_base_gid = obip.order_base_gid
AND
  obip.involved_party_qual_gid = 'CUSTOMER'
LEFT OUTER JOIN
  contact con ON obip.involved_party_contact_gid = con.contact_gid
LEFT OUTER JOIN
  location loc ON obl.dest_location_gid = loc.location_gid
WHERE
  oob.domain_name = 'SCOULAR/BCO'
AND
  SUBSTR(oob.order_base_xid, 1, 1) = 'S'  
AND
  obref.ob_refnum_value = :LOC_CODE
AND NOT EXISTS
  (SELECT obr.order_base_gid
  FROM ob_refnum obr
  WHERE obr.order_base_gid = oob.order_base_gid
  AND obr.ob_refnum_qual_gid = 'SCOULAR.CLOSE/REOPEN'
  AND obr.ob_refnum_value = 'CLOSE')
ORDER BY
  loc.city, TO_DATE(obl.early_pickup_date,'dd-mm-rr')]]></sqlStatement>
    <sqlStatement name="Q_ROWS4"><![CDATA[SELECT
  a.commodity4,
  a.market_zone4,
  a.cust_id4,
  a.contract_num4,
  a.begin_date4,
  a.end_date4,
  a.original_quantity4,
  (CASE WHEN planned_ind = 'Y' THEN
    ROUND(orig_quant - inbound_shipped,2)
  ELSE
    ROUND(orig_quant - outbound_shipped,2)
  END)
  balance4,
  (CASE WHEN planned_ind = 'Y' THEN
    ROUND(inbound_planned,2)
  ELSE
    ROUND(outbound_planned,2)
  END)
  planned_quantity4,
  a.inco4,
  a.location4
FROM
(SELECT commodity4,
  market_zone4,
  cust_id4,
  contract_num4,
  begin_date4,
  end_date4,
  planned_ind,
  original_quantity4,
  orig_quant,
  inco4,
  location4,
  SUM(inbound_shipped) inbound_shipped,
  SUM(outbound_shipped) outbound_shipped,
  SUM(inbound_planned) inbound_planned,
  SUM(outbound_planned) outbound_planned
  FROM
  (SELECT DISTINCT 
    obref1.ob_refnum_value
    commodity4,
    obref2.ob_refnum_value
    market_zone4,
    con.contact_xid
    cust_id4,
    oob.order_base_xid
    contract_num4,
    issu.s_ship_unit_gid,
    ossu.s_ship_unit_gid,
    TO_CHAR(obl.early_pickup_date, 'MM/DD/YYYY')
    begin_date4,
    TO_CHAR(obl.late_delivery_date, 'MM/DD/YYYY')
    end_date4,  
    ROUND(obl.weight_base / 2204.5855379,2)
    original_quantity4,
    obref3.ob_refnum_value planned_ind,
    (obl.weight_base / 2204.5855379) orig_quant,
    NVL(CASE 
      WHEN issur.refnum_value IS NULL
      THEN 0
      ELSE issu.unit_net_weight_base/2204.5855379
    END,0) inbound_shipped,
    NVL(CASE 
      WHEN ossu.tag_3 IS NULL
      THEN 0
      ELSE ossu.unit_net_weight_base/2204.5855379
    END,0) outbound_shipped,
    NVL(CASE 
      WHEN issur.refnum_value IS NULL
      THEN issu.unit_net_weight_base/2204.5855379
      ELSE 0
    END,0) inbound_planned,
    NVL(CASE 
      WHEN ossu.tag_3 IS NULL
      THEN ossu.unit_net_weight_base/2204.5855379
      ELSE 0
    END,0) outbound_planned,
    oob.inco_term_gid
    inco4,
    oob.term_location_text
    location4
  FROM
    ob_order_base oob
  LEFT OUTER JOIN 
    ob_refnum obr ON obr.order_base_gid = oob.order_base_gid
  AND 
    obr.ob_refnum_qual_gid = 'SCOULAR.CLOSE/REOPEN'
  INNER JOIN
    ob_refnum obref ON oob.order_base_gid = obref.order_base_gid
  AND
    obref.ob_refnum_qual_gid = 'SCOULAR.LOC_CODE'
  LEFT OUTER JOIN
    ob_line obl ON oob.order_base_gid = obl.order_base_gid
  AND
    ROWNUM = 1
  LEFT OUTER JOIN
    ob_refnum obref1 ON oob.order_base_gid = obref1.order_base_gid
  AND
    obref1.ob_refnum_qual_gid = 'SCOULAR.COMMODITY'
  LEFT OUTER JOIN
    ob_refnum obref2 ON oob.order_base_gid = obref2.order_base_gid
  AND
    obref2.ob_refnum_qual_gid = 'SCOULAR.MARKET ZONE CODE'  
  LEFT OUTER JOIN
    ob_refnum obref3 ON oob.order_base_gid = obref3.order_base_gid
  AND
    obref3.ob_refnum_qual_gid = 'SCOULAR.PURCHASE ORDER PLANNED TO INVENTORY'    
  LEFT OUTER JOIN
    ob_involved_party obip ON oob.order_base_gid = obip.order_base_gid
  AND
    obip.involved_party_qual_gid = 'CUSTOMER'
  LEFT OUTER JOIN
    contact con ON obip.involved_party_contact_gid = con.contact_gid
  LEFT OUTER JOIN 
    order_release o ON o.order_base_gid = oob.order_base_gid
  LEFT OUTER JOIN
    s_ship_unit_line issul ON issul.order_release_gid = o.order_release_gid
  LEFT OUTER JOIN
    s_ship_unit issu ON issu.s_ship_unit_gid = issul.s_ship_unit_gid
  LEFT OUTER JOIN
    s_ship_unit_refnum issur ON issur.s_ship_unit_gid = issu.s_ship_unit_gid
  AND issur.s_ship_unit_refnum_qual_gid = 'SCOULAR.TRAN ID'
  LEFT OUTER JOIN
    s_ship_unit_refnum ossur ON ossur.s_ship_unit_refnum_qual_gid IN ('SCOULAR.MATCHED_PO_ID','SCOULAR.MATCHED_PO_ID_2')
  AND ossur.refnum_value = oob.order_base_xid
  LEFT OUTER JOIN
    s_ship_unit ossu ON ossu.s_ship_unit_gid = ossur.s_ship_unit_gid
  WHERE
    oob.domain_name = 'SCOULAR/BCO'
  AND
    SUBSTR(oob.order_base_xid, 1, 1) = 'P'
  AND
    obref.ob_refnum_value = :LOC_CODE
  AND 
    NVL(obr.ob_refnum_value,'REOPEN') = 'REOPEN' --@SD Converted NOT EXISTS into OUTER JOIN
  )
  GROUP BY commodity4,
  market_zone4,
  cust_id4,
  contract_num4,
  begin_date4,
  end_date4,
  planned_ind,
  original_quantity4,
  orig_quant,
  inco4,
  location4
) a
ORDER BY
  a.market_zone4, a.contract_num4]]></sqlStatement>
  </dataQuery>
  <dataStructure>
    <group name="G_PARAMS" source="Q_PARAMS">
      <element name="LOC_CD" value="LOC_CD" />
    </group>
    <group name="G_ROWS1" source="Q_ROWS1">
      <element name="BOOKING_NUM1" value="BOOKING_NUM1" />
      <element name="SIZE1" value="SIZE1" />
      <element name="BOXES1" value="BOXES1" />
      <element name="ORIGIN_PORT_RAMP1" value="ORIGIN_PORT_RAMP1" />
      <element name="DEST_PORT1" value="DEST_PORT1" />
      <element name="CARRIER1" value="CARRIER1" />
      <element name="CUT_DATE1" value="CUT_DATE1" />
      <element name="SAIL_DATE1" value="SAIL_DATE1" />
      <element name="ETA1" value="ETA1" />
      <element name="COST1" value="COST1" />
    </group>
    <group name="G_ROWS2" source="Q_ROWS2">
      <element name="CONTRACT_NUM2" value="CONTRACT_NUM2" />
      <element name="BOOKING_NUM2" value="BOOKING_NUM2" />
      <element name="TRANSLOADER2" value="TRANSLOADER2" />
      <element name="ORIGIN_CITY2" value="ORIGIN_CITY2" />
      <element name="DESTINATION2" value="DESTINATION2" />
      <element name="CARRIER2" value="CARRIER2" />
      <element name="CUSTOMER2" value="CUSTOMER2" />
      <element name="COMMODITY2" value="COMMODITY2" />
      <element name="CUT_DATE2" value="CUT_DATE2" />
      <element name="SAIL_DATE2" value="SAIL_DATE2" />
      <element name="ETA2" value="ETA2" />
      <element name="CONTAINER_COUNT2" value="CONTAINER_COUNT2" />
      <element name="SIZE2" value="SIZE2" />
      <element name="COST_CONTAINER2" value="COST_CONTAINER2" />
      <element name="SHIPMENT_ID2" value="SHIPMENT_ID2"></element>
    </group>
    <group name="G_ROWS3" source="Q_ROWS3">
      <element name="COMMODITY3" value="COMMODITY3" />
      <element name="ORDER_ID3" value="ORDER_ID3" />
      <element name="BUYER3" value="BUYER3" />
      <element name="DEST_PORT3" value="DEST_PORT3" />
      <element name="CONTRACT_DATE3" value="CONTRACT_DATE3" />
      <element name="BEGIN_DATE3" value="BEGIN_DATE3"></element>
      <element name="END_DATE3" value="END_DATE3" />
      <element name="TOLERANCE3" value="TOLERANCE3" />
      <element name="ORIGINAL_QUANITY3" value="ORIGINAL_QUANITY3"></element>
      <element name="BALANCE3" value="BALANCE3" />
      <element name="PLANNED_QUANTITY3" value="PLANNED_QUANTITY3" />
      <element name="PRICE3" value="PRICE3" />
      <element name="PAY_TERMS3" value="PAY_TERMS3" />
      <element name="FREE_TIME_NOTES3" value="FREE_TIME_NOTES3" />
      <element name="EQUIP_TEXT3" value="EQUIP_TEXT3" />
      <element name="WEIGHT_TEXT3" value="WEIGHT_TEXT3" />
      <element name="LOGISTICS_NOTES3" value="LOGISTICS_NOTES3" />
      <element name="CARRIER_CONSTRAINT3" value="CARRIER_CONSTRAINT3" />
    </group>
    <group name="G_ROWS4" source="Q_ROWS4">
      <element name="COMMODITY4" value="COMMODITY4" />
      <element name="MARKET_ZONE4" value="MARKET_ZONE4" />
      <element name="CUST_ID4" value="CUST_ID4" />
      <element name="CONTRACT_NUM4" value="CONTRACT_NUM4" />
      <element name="BEGIN_DATE4" value="BEGIN_DATE4" />
      <element name="END_DATE4" value="END_DATE4" />
      <element name="ORIGINAL_QUANTITY4" value="ORIGINAL_QUANTITY4" />
      <element name="BALANCE4" value="BALANCE4" />
      <element name="PLANNED_QUANTITY4" value="PLANNED_QUANTITY4" />
      <element name="INCO4" value="INCO4" />
      <element name="LOCATION4" value="LOCATION4" />
    </group>
  </dataStructure>
</dataTemplate>