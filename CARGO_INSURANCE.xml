<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="CARGO_INSURANCE" description="Cargo Insurance Report" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <parameters>
    <parameter name="START_DATE" dataType="character" />
    <parameter name="END_DATE" dataType="character" />
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_ROWS"><![CDATA[SELECT
  a.shipment_xid shipment_id,
  a.order_base_gid,
	a.shipment_name vessel_name,
	TO_CHAR(TO_DATE(a.start_time,'dd-mm-rr'),'MM/DD/YYYY') shipment_start_time,  
  a.loc,
  a.origin,
  a.destination,
	a.commodity,    
  a.inco_terms,
  TRIM(TO_CHAR(SUM(a.net_weight), '999,999,990.99')) || 'MT' net_weight,
  a.contract_id,
  a.contract_price,
  a.contract_uom,
  glog_util.remove_domain(a.insert_user) planner,
  TRIM(TO_CHAR(ROUND((SUM(a.weight * a.price) * 1.1),2), '999,999,990.99'))
  insured_value,
  TRIM(TO_CHAR(ROUND(ROUND((SUM(a.weight * a.price) * 1.1),2)/100 * 0.085,2), '999,999,990.99'))
  premium_due
FROM
(SELECT DISTINCT
  s.shipment_xid,
  ssu.s_ship_unit_gid,
  oob.order_base_gid,
	s.shipment_name,
  (CASE WHEN s.source_location_gid IS NULL THEN
      s.start_time
    ELSE
      utc.get_local_date(s.start_time,s.source_location_gid)
    END) start_time,
  sref.shipment_refnum_value loc,
	oref.order_release_refnum_value AS commodity,  
  (SELECT country_code3_gid
  FROM location
  WHERE location_gid = s.source_location_gid)
  origin,
  (SELECT country_code3_gid
  FROM location
  WHERE location_gid = s.dest_location_gid)  
  destination,
  (SELECT oob.inco_term_gid
  FROM ob_order_base oob
  INNER JOIN view_shipment_order_base vsob ON oob.order_base_gid = vsob.order_base_gid
  WHERE vsob.shipment_gid = s.shipment_gid
  AND ROWNUM = 1)
  inco_terms,
	(CASE 
  WHEN ssu.unit_net_weight_uom_code = 'LB' 
  THEN ssu.unit_net_weight / 2204.62262 
  WHEN ssu.unit_net_weight_uom_code = 'KG' 
  THEN ssu.unit_net_weight / 1000 
  WHEN ssu.unit_net_weight_uom_code = 'ST' 
  THEN ssu.unit_net_weight / 1.10231 
  ELSE ssu.unit_net_weight END)
  net_weight,  
	oob.order_base_xid contract_id,
  TRIM(TO_CHAR((SELECT ob_refnum_value
  FROM ob_refnum
  WHERE order_base_gid = oob.order_base_gid
  AND ob_refnum_qual_gid = 'SCOULAR.CONTRACT_PRICE'),'999,999,990.0000'))
  contract_price,
  (SELECT ob_refnum_value
  FROM ob_refnum
  WHERE order_base_gid = oob.order_base_gid
  AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM')
  contract_uom,
  s.insert_user,
  (CASE WHEN
    (SELECT ob_refnum_value
    FROM ob_refnum
    WHERE order_base_gid = oob.order_base_gid
    AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM') IN ('MT','MTON') 
  THEN
    (CASE WHEN ssu.unit_net_weight_uom_code = 'LB' 
    THEN (ssu.unit_net_weight / 2204.62262)
    WHEN ssu.unit_net_weight_uom_code = 'KG'
    THEN (ssu.unit_net_weight / 1000)
    WHEN ssu.unit_net_weight_uom_code = 'ST'
    THEN (ssu.unit_net_weight / 1.10231) 
    ELSE ssu.unit_net_weight
    END)
  WHEN
    (SELECT ob_refnum_value
    FROM ob_refnum
    WHERE order_base_gid = oob.order_base_gid
    AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM') = 'KG' 
  THEN    
    (CASE WHEN ssu.unit_net_weight_uom_code = 'LB' 
    THEN ssu.unit_net_weight / 2.20462262
    WHEN ssu.unit_net_weight_uom_code = 'KG'
    THEN ssu.unit_net_weight
    WHEN ssu.unit_net_weight_uom_code = 'ST'
    THEN (ssu.unit_net_weight * 907.185)
    ELSE (ssu.unit_net_weight * 1000)
    END) 
  WHEN
    (SELECT ob_refnum_value
    FROM ob_refnum
    WHERE order_base_gid = oob.order_base_gid
    AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM') = 'ST' 
  THEN    
    (CASE WHEN ssu.unit_net_weight_uom_code = 'LB' 
    THEN (ssu.unit_net_weight / 1000)
    WHEN ssu.unit_net_weight_uom_code = 'KG'
    THEN (ssu.unit_net_weight / 907.185)
    WHEN ssu.unit_net_weight_uom_code = 'ST'
    THEN ssu.unit_net_weight
    ELSE (ssu.unit_net_weight * 1.10231)
    END)
  WHEN
    (SELECT ob_refnum_value
    FROM ob_refnum
    WHERE order_base_gid = oob.order_base_gid
    AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM') = 'LB' 
  THEN   
    (CASE WHEN ssu.unit_net_weight_uom_code = 'LB' 
    THEN ssu.unit_net_weight
    WHEN ssu.unit_net_weight_uom_code = 'KG'
    THEN (ssu.unit_net_weight * 0.453592)
    WHEN ssu.unit_net_weight_uom_code = 'ST'
    THEN (ssu.unit_net_weight * 2000)
    ELSE (ssu.unit_net_weight * 2204.62262)
    END)
  WHEN
    (SELECT ob_refnum_value
    FROM ob_refnum
    WHERE order_base_gid = oob.order_base_gid
    AND ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM') = 'BU' 
  THEN   
    (CASE WHEN 
      ssu.unit_net_weight_uom_code = 'LB' 
    THEN 
      (ssu.unit_net_weight /
      (SELECT TO_NUMBER(ir.remark_text)
      FROM ob_line ol
      INNER JOIN item it ON ol.packaged_item_gid = it.item_gid
      INNER JOIN item_remark ir ON it.item_gid = ir.item_gid
      AND ir.remark_qual_gid = 'SCOULAR.POUNDS PER STANDARD UNIT OF MEASURE'
      WHERE ol.order_base_gid = oob.order_base_gid))
    WHEN 
      ssu.unit_net_weight_uom_code = 'KG'
    THEN 
      ((ssu.unit_net_weight * 0.453592) /
      (SELECT TO_NUMBER(ir.remark_text)
      FROM ob_line ol
      INNER JOIN item it ON ol.packaged_item_gid = it.item_gid
      INNER JOIN item_remark ir ON it.item_gid = ir.item_gid
      AND ir.remark_qual_gid = 'SCOULAR.POUNDS PER STANDARD UNIT OF MEASURE'
      WHERE ol.order_base_gid = oob.order_base_gid))
    WHEN 
      ssu.unit_net_weight_uom_code = 'ST'
    THEN 
      ((ssu.unit_net_weight * 2000) /
      (SELECT TO_NUMBER(ir.remark_text)
      FROM ob_line ol
      INNER JOIN item it ON ol.packaged_item_gid = it.item_gid
      INNER JOIN item_remark ir ON it.item_gid = ir.item_gid
      AND ir.remark_qual_gid = 'SCOULAR.POUNDS PER STANDARD UNIT OF MEASURE'
      WHERE ol.order_base_gid = oob.order_base_gid))   
    ELSE 
      ((ssu.unit_net_weight * 2204.62262) /
      (SELECT TO_NUMBER(ir.remark_text)
      FROM ob_line ol
      INNER JOIN item it ON ol.packaged_item_gid = it.item_gid
      INNER JOIN item_remark ir ON it.item_gid = ir.item_gid
      AND ir.remark_qual_gid = 'SCOULAR.POUNDS PER STANDARD UNIT OF MEASURE'
      WHERE ol.order_base_gid = oob.order_base_gid))
    END)  
  END)
  weight,
  TO_NUMBER((SELECT ob_refnum_value
  FROM ob_refnum
  WHERE order_base_gid = oob.order_base_gid
  AND ob_refnum_qual_gid = 'SCOULAR.CONTRACT_PRICE'))
  price
FROM
	shipment s
INNER JOIN
	view_shipment_order_base vsob ON s.shipment_gid = vsob.shipment_gid
INNER JOIN
	ob_order_base oob ON vsob.order_base_gid = oob.order_base_gid
INNER JOIN
  order_release orel ON oob.order_base_gid = orel.order_base_gid
INNER JOIN
	order_release_refnum oref ON orel.order_release_gid = oref.order_release_gid
AND
	oref.order_release_refnum_qual_gid = 'SCOULAR.COMMODITY'
INNER JOIN
	shipment_refnum sref ON s.shipment_gid = sref.shipment_gid
AND
	sref.shipment_refnum_qual_gid = 'SCOULAR.LOC_CODE'
INNER JOIN
  shipment_stop_d ssd ON s.shipment_gid = ssd.shipment_gid
AND
  ssd.stop_num = 1
INNER JOIN
  s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
INNER JOIN
  s_ship_unit_line ssul ON ssu.s_ship_unit_gid = ssul.s_ship_unit_gid
AND
  ssul.order_release_gid = orel.order_release_gid
INNER JOIN
  location loc1 ON s.source_location_gid = loc1.location_gid
INNER JOIN
  location loc2 ON s.dest_location_gid = loc2.location_gid
WHERE
  s.domain_name = 'SCOULAR/FOOD'
AND
	TO_DATE(
    (CASE WHEN s.source_location_gid IS NULL THEN
      s.start_time
    ELSE
      utc.get_local_date(s.start_time,s.source_location_gid)
    END),'dd-mm-rr') >= TO_DATE(:START_DATE,'YYYY-MM-DD') 
AND 
  TO_DATE(
    (CASE WHEN s.source_location_gid IS NULL THEN
      s.start_time
    ELSE
      utc.get_local_date(s.start_time,s.source_location_gid)
    END),'dd-mm-rr') <= TO_DATE(:END_DATE, 'YYYY-MM-DD')
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
  s.transport_mode_gid = 'VESSEL-CO'
AND
  (NOT loc1.country_code3_gid = 'USA' OR NOT loc2.country_code3_gid = 'USA')
) a
GROUP BY 
  a.shipment_xid,
  a.order_base_gid,
	a.shipment_name,
	a.start_time,  
  a.loc,
	a.commodity,  
  a.origin,
  a.destination,
  a.inco_terms,
  a.contract_id,
  a.contract_price,
  a.contract_uom,
  a.insert_user
ORDER BY
	TO_DATE(a.start_time,'dd-mm-rr')]]></sqlStatement>
  </dataQuery>
  <dataStructure>
    <group name="G_ROWS" source="Q_ROWS">
      <element name="SHIPMENT_ID" value="SHIPMENT_ID"></element>
      <element name="VESSEL_NAME" value="VESSEL_NAME"></element>
      <element name="SHIPMENT_START_TIME" value="SHIPMENT_START_TIME" />
      <element name="LOC" value="LOC" />
      <element name="ORIGIN" value="ORIGIN" />
      <element name="DESTINATION" value="DESTINATION" />
      <element name="COMMODITY" value="COMMODITY" />
      <element name="INCO_TERMS" value="INCO_TERMS"></element>
      <element name="NET_WEIGHT" value="NET_WEIGHT" />
      <element name="CONTRACT_ID" value="CONTRACT_ID"></element>
      <element name="CONTRACT_PRICE" value="CONTRACT_PRICE"></element>
      <element name="CONTRACT_UOM" value="CONTRACT_UOM"></element>
      <element name="PLANNER" value="PLANNER"></element>
      <element name="INSURED_VALUE" value="INSURED_VALUE"></element>
      <element name="PREMIUM_DUE" value="PREMIUM_DUE"></element>
    </group>
  </dataStructure>
</dataTemplate>