<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="NVO_BILL_OF_LADING_IMPORT" description="NVO Bill Of Lading (Import)" dataSourceRef="ORCL" defaultPackage="GLOGOWNER.XXSCOU_NVO_BILL_LADING_IMPORT" version="1.0">
  <parameters>
    <parameter name="JOB_ID" dataType="character" />
    <parameter name="RATED_UNRATED" dataType="character" />
    <parameter name="ORIGINAL_NONNEG" dataType="character" />
    <parameter name="PROOF_EXPRESS" dataType="character" />
    <parameter name="RIDER_NORIDER" dataType="character" />
    <parameter name="SUM_PIECES" dataType="character" />
    <parameter name="SHOW_PIECES" dataType="character"></parameter>
    <parameter name="SHOW_WEIGHT" dataType="character"></parameter>
    <parameter name="SHOW_NT_WT" dataType="character"></parameter>
    <parameter name="PRINT_NT_WT" dataType="character"></parameter>
    <parameter name="SHOW_VOLUME" dataType="character"></parameter>
    <parameter name="SHOW_MEASURE" dataType="character"></parameter>
    <parameter name="SHOW_REFNUM" dataType="character"></parameter>
    <parameter name="SHOW_NOTES" dataType="character"></parameter>
    <parameter name="SEAL_PREFIX" dataType="character"></parameter>
    <parameter name="ORIGINALS_NUM" dataType="character"></parameter>
    <parameter name="USE_OVERRIDES" dataType="character"></parameter>
    <parameter name="P_REPORT_GID" dataType="character" />
    <parameter name="P_DISPLAY_NAME" dataType="character" />
    <parameter name="P_DOMAIN" dataType="character" />
    <parameter name="P_GL_USER" dataType="character"></parameter>
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_PARAMS"><![CDATA[SELECT 
:RATED_UNRATED rate_unrate,
:ORIGINAL_NONNEG orig_non,
:PROOF_EXPRESS proof_exp,
:ORIGINALS_NUM number_originals
FROM DUAL]]></sqlStatement>
    <sqlStatement name="Q_JOB"><![CDATA[SELECT
  'TSFE' || j.job_xid file_number,
  j.attribute3 customer_reference
FROM
  job j
WHERE
  j.job_gid = :JOB_I]]></sqlStatement>
    <sqlStatement name="Q_MAIN"><![CDATA[SELECT DISTINCT
	glogowner.xxscou_nvo_report_functions.entity_name(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER')
  loc_name,
	TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER','1') || ' ' ||
  glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER','2') || ' ' ||
  glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER','3'))
  loc_address,
  TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER',',') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'SCOULAR/NVO.OPS MANAGER','SCOULAR/NVO.OPS MANAGER'))
  loc_city_state_zip,
  (CASE WHEN NOT sref2.shipment_refnum_value IS NULL
  THEN
  (CASE WHEN sref2.shipment_refnum_value = 'DD' THEN 'Door-to-Door'
  WHEN sref2.shipment_refnum_value = 'DP' THEN 'Door-to-Pier'
  WHEN sref2.shipment_refnum_value = 'PD' THEN 'Pier-to-Door'
  WHEN sref2.shipment_refnum_value = 'PP' THEN 'Pier-to-Pier'
  WHEN sref2.shipment_refnum_value = 'RP' THEN 'Rail-to-Pier'
  WHEN sref2.shipment_refnum_value = 'RD' THEN 'Rail-to-Door'
  WHEN sref2.shipment_refnum_value = 'RR' THEN 'Rail-to-Rail'
  WHEN sref2.shipment_refnum_value = 'PR' THEN 'Pier-to-Rail'
  WHEN sref2.shipment_refnum_value = 'DR' THEN 'Door-to-Rail'
  ELSE sref2.shipment_refnum_value
  END)
  ELSE
  (CASE WHEN cvr1.charter_voyage_refnum_value = 'DD' THEN 'Door-to-Door'
  WHEN cvr1.charter_voyage_refnum_value = 'DP' THEN 'Door-to-Pier'
  WHEN cvr1.charter_voyage_refnum_value = 'PD' THEN 'Pier-to-Door'
  WHEN cvr1.charter_voyage_refnum_value = 'PP' THEN 'Pier-to-Pier'
  WHEN cvr1.charter_voyage_refnum_value = 'RP' THEN 'Rail-to-Pier'
  WHEN cvr1.charter_voyage_refnum_value = 'RD' THEN 'Rail-to-Door'
  WHEN cvr1.charter_voyage_refnum_value = 'RR' THEN 'Rail-to-Rail'
  WHEN cvr1.charter_voyage_refnum_value = 'PR' THEN 'Pier-to-Rail'
  WHEN cvr1.charter_voyage_refnum_value = 'DR' THEN 'Door-to-Rail'
  ELSE cvr1.charter_voyage_refnum_value
  END) END) move_type,   
  sref1.shipment_refnum_value place_of_receipt,  
	(CASE WHEN sref5.shipment_refnum_value IS NULL THEN
    sref6.shipment_refnum_value
  ELSE
    sref5.shipment_refnum_value
  END) voyage_name,
	glogowner.xxscou_nvo_report_functions.port_place(s.shipment_gid,'SCOULAR/NVO.PORT OF LOAD', s.source_location_gid)
  load_port,
	loc1.location_name discharge_port,
  sref3.shipment_refnum_value place_of_delivery,
  (CASE WHEN sref4.shipment_refnum_value IS NULL THEN
    'TSFE' || j.job_xid  
  ELSE
    sref4.shipment_refnum_value
  END)
  bill_lading,
	glogowner.xxscou_nvo_report_functions.origin_entity(s.shipment_gid,'SCOULAR/NVO.POINT OF ORIGIN',
  (SELECT DISTINCT orel.source_location_gid
  FROM order_release orel
  INNER JOIN s_ship_unit_line ssuline ON orel.order_release_gid = ssuline.order_release_gid
  INNER JOIN s_equipment_s_ship_unit_join sessujoin ON sessujoin.s_ship_unit_gid = ssuline.s_ship_unit_gid
  INNER JOIN shipment_s_equipment_join ssejoin ON sessujoin.s_equipment_gid = ssejoin.s_equipment_gid
  WHERE ssejoin.shipment_gid = s.shipment_gid),'PROVINCE') 
  point_of_origin,
  glogowner.xxscou_nvo_report_functions.origin_entity(s.shipment_gid,'SCOULAR/NVO.COUNTRY OF ORIGIN',s.source_location_gid,'COUNTRY')
  country_of_origin,
  glogowner.xxscou_nvo_report_functions.port_place(s.shipment_gid,'SCOULAR/NVO.PLACE OF DELIVERY',cv.dest_location_gid)
  address_of_delivery,  
  TO_CHAR(TO_DATE(cv.departure_date,'dd-mm-rr'),'fmMM/DD/YYYY') departure_date,
  (SELECT LISTAGG(TRIM(TO_CHAR(COUNT(ssu.s_ship_unit_gid),'99990')) || ' X ' || 
  (CASE WHEN ssu.received_ship_unit_count = 19 THEN 'LCL'
  WHEN ssu.received_ship_unit_count = 20 THEN '20'''
  WHEN ssu.received_ship_unit_count = 21 THEN '20''RF'
  WHEN ssu.received_ship_unit_count = 40 THEN '40'''
  WHEN ssu.received_ship_unit_count = 41 THEN '40''HCRF'
  WHEN ssu.received_ship_unit_count = 42 THEN '40''HC'  
  WHEN ssu.received_ship_unit_count = 45 THEN '45'''
  WHEN ssu.received_ship_unit_count = 46 THEN '45''RF' END), CHR(13))
  WITHIN GROUP (ORDER BY ssu.received_ship_unit_count) 
  FROM	shipment_stop_d ssd
  INNER JOIN s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE ssd.shipment_gid = s.shipment_gid
  AND ssd.stop_num = 1
  GROUP BY ssu.received_ship_unit_count)
  container_count,
  REPLACE(srem1.remark_text,'|',CHR(13))
  descript_of_cargo,
  'HTS Code: ' || s.attribute2 said_to_contain,  
  (CASE WHEN :USE_OVERRIDES = 'YES' THEN
    (CASE WHEN 
    (SELECT COUNT (ssur.remark_text) 
    FROM s_ship_unit_remark ssur 
    INNER JOIN s_ship_unit ssu ON ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
    INNER JOIN shipment_stop_d ssd ON ssu.s_ship_unit_gid = ssd.s_ship_unit_gid
    AND ssd.stop_num = 1
    WHERE ssd.shipment_gid = s.shipment_gid
    AND ssur.remark_qual_gid = 'SCOULAR/NVO.DESCRIPTION OF CARGO OVERRIDE') > 0 
    THEN 'Y' ELSE 'N' END) 
  ELSE
    'N'
  END)
  ssu_y_n
FROM
	job j
INNER JOIN
  job_order_release_join jorj ON j.job_gid = jorj.job_gid
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
  s.perspective = 'B'
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
LEFT OUTER JOIN
	shipment_refnum sr ON s.shipment_gid = sr.shipment_gid
AND
	sr.shipment_refnum_qual_gid = 'CHARTER VOYAGE'		
LEFT OUTER JOIN
	charter_voyage cv ON 'SCOULAR/NVO.' || sr.shipment_refnum_value = cv.charter_voyage_gid
LEFT OUTER JOIN
  vessel v ON cv.vessel_gid = v.vessel_gid    
LEFT OUTER JOIN
	charter_voyage_refnum cvr ON cv.charter_voyage_gid = cvr.charter_voyage_gid
AND
	cvr.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_VOYAGE_NUMBER'
LEFT OUTER JOIN
	charter_voyage_refnum cvr1 ON cv.charter_voyage_gid = cvr1.charter_voyage_gid
AND
	cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_MOVE_TYPE'  
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
	sref1.shipment_refnum_qual_gid = 'SCOULAR/NVO.PLACE OF RECEIPT'	    
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
	sref2.shipment_refnum_qual_gid = 'SCOULAR/NVO.SERVICE TYPE'	 
LEFT OUTER JOIN
	shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
	sref3.shipment_refnum_qual_gid = 'SCOULAR/NVO.PLACE OF DELIVERY'
LEFT OUTER JOIN
	shipment_refnum sref4 ON s.shipment_gid = sref4.shipment_gid
AND
	sref4.shipment_refnum_qual_gid = 'SCOULAR/NVO.HBL NUMBER OVERRIDE'    
LEFT OUTER JOIN
	shipment_refnum sref5 ON s.shipment_gid = sref5.shipment_gid
AND
	sref5.shipment_refnum_qual_gid = 'SCOULAR/NVO.VESSEL_VOYAGE'  
LEFT OUTER JOIN
	shipment_refnum sref6 ON s.shipment_gid = sref6.shipment_gid
AND
	sref6.shipment_refnum_qual_gid = 'SCOULAR/NVO.BOOKING_VESSEL_VOYAGE'    
LEFT OUTER JOIN
	shipment_remark srem1 ON s.shipment_gid = srem1.shipment_gid
AND
	srem1.remark_qual_gid = 'SCOULAR/NVO.HBL DESCRIPTION OF CARGO'
LEFT OUTER JOIN
  location loc1 ON s.port_of_dis_location_gid = loc1.location_gid
WHERE
	j.job_gid = :JOB_ID]]></sqlStatement>
    <sqlStatement name="Q_ENTITY1"><![CDATA[SELECT DISTINCT
  TRIM((CASE WHEN glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_SHIPPER_LINE1') IS NULL THEN
    (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'SHIPPER') IS NULL THEN
      glogowner.xxscou_nvo_report_functions.entity_location_name(s.shipment_gid,'XXX','SHIPPER')
      ||
      CHR(13) ||
      (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SHIPPER','2') IS NULL THEN
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SHIPPER','1'))
      ELSE
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SHIPPER','1') || CHR(13) ||
        glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SHIPPER','2'))
      END)
      ||
      CHR(13) ||
      TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','SHIPPER',',') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','SHIPPER') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','SHIPPER') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','SHIPPER'))
      ||
      CHR(13) || 
      glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','SHIPPER','PH')
      ||
      CHR(13) || 
      glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'XXX','SHIPPER','FAX')      
    ELSE
      REPLACE(glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'SHIPPER'),CHR(13) || CHR(13),CHR(13))
    END)
  ELSE
    REPLACE(glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_SHIPPER_LINE1'),CHR(13) || CHR(13),CHR(13))
  END))
  shipper_name
FROM
	job j
INNER JOIN
  job_order_release_join jorj ON j.job_gid = jorj.job_gid
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'B'
WHERE
	j.job_gid = :JOB_ID]]></sqlStatement>
    <sqlStatement name="Q_ENTITY2"><![CDATA[SELECT DISTINCT
  (CASE WHEN glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_CONSIGNEE_LINE1') IS NULL THEN
    (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'ULTIMATE CONSIGNEE') IS NULL THEN
      glogowner.xxscou_nvo_report_functions.entity_location_name(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE')
      ||
      (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_location_name(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE') = 'TO ORDER' 
      THEN ''
      ELSE
        CHR(13) || 
        (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE','2') IS NULL THEN
          TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE','1'))
        ELSE
          TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE','1') || CHR(13) ||
          glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE','2')) 
        END)
        ||
        CHR(13) || 
        TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE',',') || ' ' || 
        glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE') || ' ' || 
        glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE') || ' ' || 
        glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE'))
        ||
        CHR(13) || 
        glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','ULTIMATE CONSIGNEE','PH')
        ||
        CHR(13) ||
        glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'SCOULAR/NVO.UC_FAX','ULTIMATE CONSIGNEE','FAX')
      END)
    ELSE
      REPLACE(glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'ULTIMATE CONSIGNEE'), CHR(13) || CHR(13), CHR(13))
    END)
  ELSE
    REPLACE(glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_CONSIGNEE_LINE1'), CHR(13) || CHR(13), CHR(13))
  END)
  consignee_name
FROM
	job j
INNER JOIN
  job_order_release_join jorj ON j.job_gid = jorj.job_gid
INNER JOIN
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'B'
WHERE
	j.job_gid = :JOB_ID]]></sqlStatement>
    <sqlStatement name="Q_ENTITY3"><![CDATA[SELECT DISTINCT
  (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'FORWARDING AGENT') IS NULL THEN
    glogowner.xxscou_nvo_report_functions.entity_name(s.shipment_gid,'SCOULAR/NVO.FA_NAME','FORWARDING AGENT')
    ||
    CHR(13) ||
    (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.FA_ADD2','FORWARDING AGENT','2') IS NULL THEN
      TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.FA_ADD1','FORWARDING AGENT','1'))
    ELSE
      TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.FA_ADD1','FORWARDING AGENT','1') || CHR(13) ||
      glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.FA_ADD2','FORWARDING AGENT','2'))
    END)
    ||
    CHR(13) ||
    TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'SCOULAR/NVO.FA_CITY','FORWARDING AGENT',',') || ' ' || 
    glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'SCOULAR/NVO.FA_PRVNC','FORWARDING AGENT') || ' ' || 
    glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'SCOULAR/NVO.FA_ZIP','FORWARDING AGENT') || ' ' || 
    glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'SCOULAR/NVO.FA_CNTRY','FORWARDING AGENT'))
  ELSE
    REPLACE(glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'FORWARDING AGENT'),CHR(13) || CHR(13),CHR(13))
  END)
  agent_name,
  (CASE WHEN glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_NP_LINE1') IS NULL THEN
    (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'NOTIFY PARTY') IS NULL THEN
      glogowner.xxscou_nvo_report_functions.entity_name(s.shipment_gid,'SCOULAR/NVO.NP_NAME','NOTIFY PARTY')
      ||
      CHR(13) ||
      (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.NP_ADD2','NOTIFY PARTY','2') IS NULL THEN
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.NP_ADD1','NOTIFY PARTY','1'))
      ELSE
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.NP_ADD1','NOTIFY PARTY','1') || CHR(13) ||
        glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'SCOULAR/NVO.NP_ADD2','NOTIFY PARTY','2'))
      END)   
      ||
      CHR(13) ||
      TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','NOTIFY PARTY',',') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','NOTIFY PARTY') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','NOTIFY PARTY') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','NOTIFY PARTY'))
      ||
      CHR(13) ||
      glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','NOTIFY PARTY','PH')
      ||
      CHR(13) ||
      glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'XXX','NOTIFY PARTY','FAX')    
    ELSE
      REPLACE(glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'NOTIFY PARTY'),CHR(13) || CHR(13),CHR(13))
    END)
  ELSE
    REPLACE(glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_NP_LINE1'),CHR(13) || CHR(13),CHR(13))
  END)
  notify_name
FROM
	job j
INNER JOIN
  job_order_release_join jorj ON j.job_gid = jorj.job_gid
INNER JOIN
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'B'
WHERE
	j.job_gid = :JOB_ID]]></sqlStatement>
    <sqlStatement name="Q_ENTITY4"><![CDATA[SELECT DISTINCT
  (CASE WHEN glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_ANP_LINE1') IS NULL THEN
    (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'SCOULAR/NVO.ALSO_NOTIFY_PARTY') IS NULL THEN
      glogowner.xxscou_nvo_report_functions.entity_name(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY')
      ||
      CHR(13) ||
      (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','2') IS NULL THEN
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','1'))
      ELSE
        TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','1') || CHR(13) ||
        glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','2'))
      END)
      ||
      CHR(13) ||
      TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY',',') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY') || ' ' || 
      glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY'))
      ||
      CHR(13) ||
      glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','PH')
      ||
      CHR(13) ||
      glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'XXX','SCOULAR/NVO.ALSO_NOTIFY_PARTY','FAX')     
    ELSE
      REPLACE(glogowner.xxscou_nvo_report_functions.entity_contact_desc(s.shipment_gid,'SCOULAR/NVO.ALSO_NOTIFY_PARTY'),CHR(13) || CHR(13),CHR(13))
    END)
  ELSE
    REPLACE(glogowner.xxscou_nvo_report_functions.remark_value(s.shipment_gid,'SCOULAR/NVO.HBL_ANP_LINE1'),CHR(13) || CHR(13),CHR(13))
  END)
  also_notify_name
FROM
	job j
INNER JOIN
  job_order_release_join jorj ON j.job_gid = jorj.job_gid
INNER JOIN
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'B'
WHERE
	j.job_gid = :JOB_ID]]></sqlStatement>
    <sqlStatement name="Q_ROWS"><![CDATA[SELECT
  a.s_ship_unit_gid,
  (CASE WHEN :RIDER_NORIDER = 'RIDER' THEN 
    a.container_num
  ELSE
    a.container_num || 
    (CASE WHEN NOT a.seal_num1 IS NULL THEN
    CHR(13) || :SEAL_PREFIX || '  ' || 
    (CASE WHEN a.attribute1 = 'YES' THEN
      'AGENT SEAL '
    ELSE
      ''
    END) ||      
    a.seal_num1 END)
    || 
    (CASE WHEN NOT a.seal_num2 IS NULL THEN
      CHR(13) || :SEAL_PREFIX || '  ' || 
      (CASE WHEN a.attribute1 = 'YES' THEN
        'CUSTOMS SEAL '
      ELSE
        ''
      END) ||      
      a.seal_num2 
    END) ||
    (CASE WHEN NOT a.seal_num3 IS NULL THEN
      CHR(13) || :SEAL_PREFIX || '  ' || a.seal_num3 
    END) ||  
    (CASE WHEN NOT a.marks_numbers IS NULL THEN
      CHR(13) || a.marks_numbers 
    END)
    || 
    (CASE WHEN :SHOW_PIECES = 'YES' THEN
      (CASE WHEN NOT TRIM(a.piece_cnt || ' ' || a.piece_typ) IS NULL THEN
        CHR(13) || TRIM(a.piece_cnt || ' ' || glogowner.xxscou_nvo_report_functions.type_of_pieces(a.piece_cnt,a.piece_typ))
      END)
    END) ||
    (CASE WHEN :SHOW_WEIGHT = 'YES' THEN
      (CASE WHEN NOT a.received_weight IS NULL THEN
        CHR(13) || a.received_weight || ' ' || a.received_weight_uom END)
      END)
    ||
    (CASE WHEN :SHOW_WEIGHT = 'YES' THEN
      (CASE WHEN :SHOW_NT_WT = 'YES' THEN
        (CASE WHEN NOT a.unit_net_weight IS NULL THEN 
        CHR(13) || a.unit_net_weight || ' ' || a.unit_net_weight_uom_code || ' NET' END)
      END)
    END) || 
    (CASE WHEN :SHOW_VOLUME = 'YES' THEN
      (CASE WHEN NOT a.received_volume IS NULL THEN
      CHR(13) || a.received_volume || ' ' || a.received_volume_uom END)
    END) ||
    (CASE WHEN :SHOW_REFNUM = 'YES' THEN
      (CASE WHEN NOT a.orig_refnum IS NULL THEN
        CHR(13) || a.orig_refnum
      END)
    END) ||
    (CASE WHEN :SHOW_NOTES = 'YES' THEN
      (CASE WHEN NOT a.cont_notes IS NULL THEN
        CHR(13) || a.cont_notes
      END)
    END)    
  END) || CHR(13) || CHR(13) container_num,
  (CASE WHEN :RIDER_NORIDER = 'RIDER' THEN  
    ''
  ELSE
    a.short_desc || CHR(13) || CHR(13) || CHR(13) || CHR(13)
  END)
  short_desc
FROM
(SELECT DISTINCT
  ssu.s_ship_unit_gid,
	(CASE WHEN :RIDER_NORIDER = 'RIDER'
  THEN 'See Attached Rider for Container Info'
  ELSE ssu.tag_3 END) container_num,
  ssu.tag_1 seal_num1,
  (SELECT ssur.refnum_value
  FROM s_ship_unit_refnum ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.s_ship_unit_refnum_qual_gid = 'SCOULAR.CONTAINER SEAL NUMBER 2')
  seal_num2,
  (SELECT ssur.refnum_value
  FROM s_ship_unit_refnum ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.s_ship_unit_refnum_qual_gid = 'SCOULAR.CONTAINER SEAL NUMBER 3')
  seal_num3,
  s.attribute1,
  ssur1.refnum_value piece_cnt,
  ssur2.refnum_value piece_typ,
  ssur3.refnum_value orig_refnum,
  ssur4.refnum_value cont_notes,  
  ssur5.refnum_value received_weight,
  ssur6.refnum_value received_weight_uom,
  ssur7.refnum_value unit_net_weight,
  ssur8.refnum_value unit_net_weight_uom_code,
  ssur9.refnum_value received_volume,
  ssur10.refnum_value received_volume_uom,
  ssur11.refnum_value marks_numbers,
  (SELECT ssur.remark_text
  FROM s_ship_unit_remark ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.remark_qual_gid = 'SCOULAR/NVO.DESCRIPTION OF CARGO OVERRIDE') 
  short_desc
FROM
	job_order_release_join jorj
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
	s.perspective = 'B'
INNER JOIN
	shipment_stop_d ssd ON s.shipment_gid = ssd.shipment_gid
AND
	ssd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
LEFT OUTER JOIN
  s_ship_unit_refnum ssur1 ON ssu.s_ship_unit_gid = ssur1.s_ship_unit_gid
AND
  ssur1.s_ship_unit_refnum_qual_gid = 'SCOULAR.PIECE COUNT'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur2 ON ssu.s_ship_unit_gid = ssur2.s_ship_unit_gid
AND
  ssur2.s_ship_unit_refnum_qual_gid = 'SCOULAR.PIECE TYPE'   
LEFT OUTER JOIN
  s_ship_unit_refnum ssur3 ON ssu.s_ship_unit_gid = ssur3.s_ship_unit_gid
AND
  ssur3.s_ship_unit_refnum_qual_gid = 'SCOULAR.ORIGIN REFERENCE NUMBER'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur4 ON ssu.s_ship_unit_gid = ssur4.s_ship_unit_gid
AND
  ssur4.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER NOTES'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur5 ON ssu.s_ship_unit_gid = ssur5.s_ship_unit_gid
AND
  ssur5.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_GROSS_WEIGHT'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur6 ON ssu.s_ship_unit_gid = ssur6.s_ship_unit_gid
AND
  ssur6.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_GROSS_WEIGHT_UOM'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur7 ON ssu.s_ship_unit_gid = ssur7.s_ship_unit_gid
AND
  ssur7.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_NET_WEIGHT'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur8 ON ssu.s_ship_unit_gid = ssur8.s_ship_unit_gid
AND
  ssur8.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_NET_WEIGHT_UOM'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur9 ON ssu.s_ship_unit_gid = ssur9.s_ship_unit_gid
AND
  ssur9.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_GROSS_VOLUME'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur10 ON ssu.s_ship_unit_gid = ssur10.s_ship_unit_gid
AND
  ssur10.s_ship_unit_refnum_qual_gid = 'SCOULAR/NVO.CONTAINER_GROSS_VOLUME_UOM'
LEFT OUTER JOIN
  s_ship_unit_refnum ssur11 ON ssu.s_ship_unit_gid = ssur11.s_ship_unit_gid
AND
  ssur11.s_ship_unit_refnum_qual_gid = 'SCOULAR.MARKS AND NUMBERS'  
WHERE
	jorj.job_gid = :JOB_ID
AND (:RIDER_NORIDER = 'RIDER' AND ROWNUM = 1
OR :RIDER_NORIDER = 'NO-RIDER')
ORDER BY ssu.s_ship_unit_gid ASC) a]]></sqlStatement>
    <sqlStatement name="Q_PCS"><![CDATA[SELECT 
  glogowner.xxscou_nvo_report_functions.count_of_pieces(:SUM_PIECES,:JOB_ID)
  piece_count
FROM 
  DUAL]]></sqlStatement>
    <sqlStatement name="Q_WT_TOT"><![CDATA[SELECT
  (CASE WHEN (a.weight1 IS NULL AND a.weight2 IS NULL AND a.weight3 IS NULL) THEN
    (SELECT LISTAGG(
    TRIM(TO_CHAR(ROUND(SUM(ssu.received_weight),3),'999,999,990.000')) || ' ' || ssu.received_weight_uom,', ')
    WITHIN GROUP (ORDER BY ssu.received_weight_uom)
    FROM shipment_stop_d sstopd
    INNER JOIN s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid
    WHERE sstopd.shipment_gid = a.shipment_gid
    AND	sstopd.stop_num = 1
    AND NOT ssu.received_weight_uom IS NULL
    GROUP BY ssu.received_weight_uom)
  ELSE
    a.weight1
  END)
  total_wt_gross,
  (CASE WHEN (a.weight1 IS NULL AND a.weight2 IS NULL AND a.weight3 IS NULL)  THEN
    (CASE WHEN :PRINT_NT_WT = 'YES' THEN
      (SELECT LISTAGG(
      TRIM(TO_CHAR(ROUND(SUM(ssu.unit_net_weight),3),'999,999,990.000')) || ' ' || ssu.unit_net_weight_uom_code,', ')
      WITHIN GROUP (ORDER BY ssu.unit_net_weight_uom_code)
      FROM shipment_stop_d sstopd
      INNER JOIN s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid
      WHERE sstopd.shipment_gid = a.shipment_gid
      AND	sstopd.stop_num = 1
      AND NOT ssu.unit_net_weight_uom_code IS NULL
      GROUP BY ssu.unit_net_weight_uom_code)
    ELSE
      ''
    END) 
  ELSE
    a.weight2
  END)    
  total_wt_net,
  (CASE WHEN (a.weight1 IS NULL AND a.weight2 IS NULL AND a.weight3 IS NULL)  THEN
    (CASE WHEN :PRINT_NT_WT = 'YES' THEN
      'NET'
    ELSE
      ''
    END)
  ELSE
    ''
  END) show_net,
  a.weight3 weight_three,
  (CASE WHEN (a.volume1 IS NULL AND a.volume2 IS NULL AND a.volume3 IS NULL)  THEN 
    (CASE WHEN :SHOW_MEASURE = 'YES' THEN
      (SELECT LISTAGG(
      TRIM(TO_CHAR(ROUND(SUM(ssu.received_volume),3),'999,999,990.000')) || ' ' || REPLACE(ssu.received_volume_uom,'CUMTR','CBM'),', ')
      WITHIN GROUP (ORDER BY ssu.received_volume_uom)
      FROM shipment_stop_d sstopd
      INNER JOIN s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid
      WHERE sstopd.shipment_gid = a.shipment_gid
      AND	sstopd.stop_num = 1
      AND NOT ssu.received_volume_uom IS NULL
      GROUP BY ssu.received_volume_uom)   
    END)
  ELSE
    a.volume1
  END) total_volume,
  a.volume2 volume_two,
  a.volume3 volume_three
FROM
(SELECT DISTINCT
  s.shipment_gid,
  sref1.shipment_refnum_value weight1,
  sref2.shipment_refnum_value weight2,
  sref3.shipment_refnum_value weight3,
  sref4.shipment_refnum_value volume1,
  sref5.shipment_refnum_value volume2,
  sref6.shipment_refnum_value volume3 
FROM
	job_order_release_join jorj
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
AND
	s.perspective = 'B'
INNER JOIN
	shipment_stop_d ssd ON s.shipment_gid = ssd.shipment_gid
AND
	ssd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
	sref1.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 1'	
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
	sref2.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 2'
LEFT OUTER JOIN
	shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
	sref3.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 3'
LEFT OUTER JOIN
	shipment_refnum sref4 ON s.shipment_gid = sref4.shipment_gid
AND
	sref4.shipment_refnum_qual_gid = 'SCOULAR/NVO.VOLUME VALUE 1'  
LEFT OUTER JOIN
	shipment_refnum sref5 ON s.shipment_gid = sref5.shipment_gid
AND
	sref5.shipment_refnum_qual_gid = 'SCOULAR/NVO.VOLUME VALUE 2'	
LEFT OUTER JOIN
	shipment_refnum sref6 ON s.shipment_gid = sref6.shipment_gid
AND
	sref6.shipment_refnum_qual_gid = 'SCOULAR/NVO.VOLUME VALUE 3' 
WHERE
	jorj.job_gid = :JOB_ID) a]]></sqlStatement>
    <sqlStatement name="Q_RATES"><![CDATA[ SELECT
  a.sort_order,
  a.rates,
  (CASE WHEN a.cost_type = 'B' OR ((NOT UPPER(a.detail) LIKE '%BOL%' OR NOT a.remark_text = 'YES')
   OR (a.detail IS NULL AND a.remark_text IS NULL)) THEN
    (CASE WHEN (SELECT COUNT(scost.shipment_cost_seqno) 
      FROM shipment_cost scost WHERE scost.shipment_gid = a.shipment_gid
      AND scost.cost_type = 'B') = 1 THEN
        TRIM(TO_CHAR(a.total_ship_unit_count,'999,999,990')) || ' ' || 
        (CASE
        WHEN NOT
        (SELECT cvr1.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr1
        WHERE cvr1.charter_voyage_gid = a.charter_voyage_gid
        AND cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_20FTRF COUNT') IS NULL THEN
        '20 FT RF'  
        WHEN NOT
        (SELECT cvr1.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr1
        WHERE cvr1.charter_voyage_gid = a.charter_voyage_gid
        AND cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_TEU COUNT') IS NULL THEN
        '20 FT'
        WHEN NOT
        (SELECT cvr2.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr2
        WHERE cvr2.charter_voyage_gid = a.charter_voyage_gid
        AND cvr2.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FT COUNT') IS NULL THEN
        '40 FT'
        WHEN NOT
        (SELECT cvr3.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr3
        WHERE cvr3.charter_voyage_gid = a.charter_voyage_gid
        AND cvr3.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTHC COUNT') IS NULL THEN
        '40 FT HC'
        WHEN NOT
        (SELECT cvr4.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr4
        WHERE cvr4.charter_voyage_gid = a.charter_voyage_gid
        AND cvr4.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTRF COUNT') IS NULL THEN
        '40 FT RF'
        WHEN NOT
        (SELECT cvr5.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr5
        WHERE cvr5.charter_voyage_gid = a.charter_voyage_gid
        AND cvr5.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_45FTRF COUNT') IS NULL THEN
        '45 FT RF' 
        END) || ' @ ' ||
        TRIM(TO_CHAR(ROUND(a.cost / a.total_ship_unit_count, 2),'999,999,990.00')) 
      ELSE
        TRIM(TO_CHAR(a.cost, '999,999,990.00'))
      END)
  ELSE 
    TRIM(TO_CHAR(a.cost, '999,999,990.00'))
  END) base,
  a.r_prepaid,
  a.r_collect
FROM
(SELECT DISTINCT
  (CASE WHEN sc.cost_type = 'B' THEN 1
  WHEN sc.cost_type = 'A' THEN 2
  WHEN sc.cost_type = 'O' THEN 3
  ELSE 4 END) sort_order,
  sc.shipment_cost_seqno,
  (CASE WHEN sc.cost_type = 'B' THEN
    'O/F'
  ELSE
    (SELECT ac.accessorial_code_xid
    FROM accessorial_code ac
    WHERE ac.accessorial_code_gid = sc.accessorial_code_gid)
  END) rates,
  sc.cost_type,
  sc.cost,
  scd.detail,
  (SELECT COUNT(ssu.s_ship_unit_gid)
  FROM shipment_stop_d ssd
  INNER JOIN s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE ssd.shipment_gid = s.shipment_gid
  AND stop_num = 1)
  total_ship_unit_count,
  s.shipment_gid,
  scr.remark_text,  
  (SELECT DISTINCT cv1.charter_voyage_gid
  FROM job j1
  INNER JOIN job_order_release_join jorj1 ON j1.job_gid = jorj1.job_gid
  INNER JOIN s_ship_unit_line ssul1 ON jorj1.order_release_gid = ssul1.order_release_gid
  INNER JOIN s_equipment_s_ship_unit_join sessuj1 ON sessuj1.s_ship_unit_gid = ssul1.s_ship_unit_gid
  INNER JOIN shipment_s_equipment_join ssej1 ON sessuj1.s_equipment_gid = ssej1.s_equipment_gid 
  INNER JOIN shipment s1 ON ssej1.shipment_gid = s1.shipment_gid
  AND s1.perspective = 'B'
  AND s1.shipment_type_gid = 'TRANSPORT'
  AND s1.transport_mode_gid = 'VESSEL-CO'
  AND s1.is_primary = 'Y'
  INNER JOIN shipment_refnum sr1 ON s1.shipment_gid = sr1.shipment_gid
  AND sr1.shipment_refnum_qual_gid = 'CHARTER VOYAGE'
  INNER JOIN charter_voyage cv1 ON 'SCOULAR/NVO.' || sr1.shipment_refnum_value = cv1.charter_voyage_gid
  WHERE jorj1.job_gid = :JOB_ID) charter_voyage_gid,  
  (CASE WHEN sc.payment_method_code_gid = 'PPD' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'PPD') THEN TRIM(TO_CHAR(sc.cost, '999,999,990.00')) ELSE '' END) r_prepaid,
  (CASE WHEN sc.payment_method_code_gid = 'COL' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'COL') THEN TRIM(TO_CHAR(sc.cost, '999,999,990.00')) ELSE '' END) r_collect
FROM
  job_order_release_join jorj
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'S'
INNER JOIN 
  shipment_cost sc ON sc.shipment_gid = s.shipment_gid
AND
  (sc.cost_type = 'B'
OR
  (NOT sc.cost_type = 'B'
AND EXISTS
  (SELECT scr.remark_text
  FROM shipment_cost_remark scr
  WHERE scr.shipment_cost_seqno = sc.shipment_cost_seqno
  AND remark_qual_gid = 'SCOULAR/NVO.PRINT ON BL'
  AND remark_text = 'YES')))    
LEFT OUTER JOIN
  shipment_cost_remark scr ON sc.shipment_cost_seqno = scr.shipment_cost_seqno     
AND
  scr.remark_qual_gid = 'SCOULAR/NVO.IS_COST_PER_BOL'    
LEFT OUTER JOIN
  shipment_cost_detail scd ON sc.shipment_cost_seqno = scd.shipment_cost_seqno    
WHERE
  jorj.job_gid = :JOB_ID) a
ORDER BY a.sort_order ASC]]></sqlStatement>
    <sqlStatement name="Q_TOTALS"><![CDATA[SELECT 
  TRIM(TO_CHAR(SUM(a.total_p), '999,999,990.00')) total_ppd, TRIM(TO_CHAR(SUM(a.total_c), '999,999,990.00')) total_col
FROM 
(SELECT DISTINCT
  sc.shipment_cost_seqno,
  (CASE WHEN sc.payment_method_code_gid = 'PPD' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'PPD')
  THEN sc.cost ELSE 0 END) total_p,
  (CASE WHEN sc.payment_method_code_gid = 'COL' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'COL')
  THEN sc.cost ELSE 0 END) total_c  
FROM
  job_order_release_join jorj
INNER JOIN 
  s_ship_unit_line ssul ON jorj.order_release_gid = ssul.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej ON sessuj.s_equipment_gid = ssej.s_equipment_gid
INNER JOIN
	shipment s ON ssej.shipment_gid = s.shipment_gid
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.is_primary = 'Y'
AND
  s.perspective = 'S'
INNER JOIN 
  shipment_cost sc ON sc.shipment_gid = s.shipment_gid
AND
  (sc.cost_type = 'B'
OR
  (NOT sc.cost_type = 'B'
AND EXISTS
  (SELECT scr.remark_text
  FROM shipment_cost_remark scr
  WHERE scr.shipment_cost_seqno = sc.shipment_cost_seqno
  AND remark_qual_gid = 'SCOULAR/NVO.PRINT ON BL'
  AND remark_text = 'YES')))   
WHERE
  jorj.job_gid = :JOB_ID) a]]></sqlStatement>
  </dataQuery>
  <dataTrigger name="beforeReport" source="GLOGOWNER.XXSCOU_NVO_BILL_LADING_IMPORT.before_report" />
  <dataStructure>
    <group name="G_PARAMS" source="Q_PARAMS">
      <element name="RATE_UNRATE" value="RATE_UNRATE" />
      <element name="ORIG_NON" value="ORIG_NON" />
      <element name="PROOF_EXP" value="PROOF_EXP" />
      <element name="NUMBER_ORIGINALS" value="NUMBER_ORIGINALS" />
    </group>
    <group name="G_JOB" source="Q_JOB">
      <element name="FILE_NUMBER" value="FILE_NUMBER" />
      <element name="CUSTOMER_REFERENCE" value="CUSTOMER_REFERENCE" />
    </group>
    <group name="G_MAIN" source="Q_MAIN">
      <element name="LOC_NAME" value="LOC_NAME" />
      <element name="LOC_ADDRESS" value="LOC_ADDRESS" />
      <element name="LOC_CITY_STATE_ZIP" value="LOC_CITY_STATE_ZIP" />
      <element name="MOVE_TYPE" value="MOVE_TYPE" />
      <element name="PLACE_OF_RECEIPT" value="PLACE_OF_RECEIPT"></element>
      <element name="VOYAGE_NAME" value="VOYAGE_NAME" />
      <element name="LOAD_PORT" value="LOAD_PORT"></element>
      <element name="DISCHARGE_PORT" value="DISCHARGE_PORT" />
      <element name="PLACE_OF_DELIVERY" value="PLACE_OF_DELIVERY"></element>
      <element name="BILL_LADING" value="BILL_LADING" />
      <element name="POINT_OF_ORIGIN" value="POINT_OF_ORIGIN" />
      <element name="COUNTRY_OF_ORIGIN" value="COUNTRY_OF_ORIGIN"></element>
      <element name="ADDRESS_OF_DELIVERY" value="ADDRESS_OF_DELIVERY" />
      <element name="DEPARTURE_DATE" value="DEPARTURE_DATE"></element>
      <element name="CONTAINER_COUNT" value="CONTAINER_COUNT" />
      <element name="DESCRIPT_OF_CARGO" value="DESCRIPT_OF_CARGO"></element>
      <element name="SAID_TO_CONTAIN" value="SAID_TO_CONTAIN"></element>
      <element name="SSU_Y_N" value="SSU_Y_N"></element>
    </group>
    <group name="G_ENTITY1" source="Q_ENTITY1">
      <element name="SHIPPER_NAME" value="SHIPPER_NAME" />
    </group>
    <group name="G_ENTITY2" source="Q_ENTITY2">
      <element name="CONSIGNEE_NAME" value="CONSIGNEE_NAME" />
    </group>
    <group name="G_ENTITY3" source="Q_ENTITY3">
      <element name="AGENT_NAME" value="AGENT_NAME" />
      <element name="NOTIFY_NAME" value="NOTIFY_NAME" />
    </group>
    <group name="G_ENTITY4" source="Q_ENTITY4">
      <element name="ALSO_NOTIFY_NAME" value="ALSO_NOTIFY_NAME" />
    </group>
    <group name="G_ROWS" source="Q_ROWS">
      <element name="CONTAINER_NUM" value="CONTAINER_NUM" />
      <element name="SHORT_DESC" value="SHORT_DESC"></element>
    </group>
    <group name="G_PCS" source="Q_PCS">
      <element name="PIECE_COUNT" value="PIECE_COUNT" />
    </group>
    <group name="G_WT_TOT" source="Q_WT_TOT">
      <element name="TOTAL_WT_GROSS" value="TOTAL_WT_GROSS"></element>
      <element name="TOTAL_WT_NET" value="TOTAL_WT_NET"></element>
      <element name="SHOW_NET" value="SHOW_NET"></element>
      <element name="WEIGHT_THREE" value="WEIGHT_THREE"></element>
      <element name="TOTAL_VOLUME" value="TOTAL_VOLUME"></element>
      <element name="VOLUME_TWO" value="VOLUME_TWO"></element>
      <element name="VOLUME_THREE" value="VOLUME_THREE"></element>
    </group>
    <group name="G_RATES" source="Q_RATES">
      <element name="RATES" value="RATES"></element>
      <element name="BASE" value="BASE"></element>
      <element name="R_PREPAID" value="R_PREPAID"></element>
      <element name="R_COLLECT" value="R_COLLECT"></element>
    </group>
    <group name="G_TOTALS" source="Q_TOTALS">
      <element name="TOTAL_PPD" value="TOTAL_PPD"></element>
      <element name="TOTAL_COL" value="TOTAL_COL"></element>
    </group>
  </dataStructure>
</dataTemplate>