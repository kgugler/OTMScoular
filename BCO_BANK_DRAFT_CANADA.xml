<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="BCO_BANK_DRAFT_CANADA" description="BCO Canada Bank Draft" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <lexicals></lexicals>
  <parameters>
    <parameter name="SHIPMENT_ID" dataType="character" />
  </parameters>
  <dataQuery>
    <sqlStatement name="Q_MAIN"><![CDATA[SELECT DISTINCT
	sref1.shipment_refnum_value
  bl_number,
  TO_CHAR(TO_DATE(s.sail_date,'dd-mm-rr'),'fmMonth DD, YYYY') 
  booking_date,
	(CASE WHEN sref2.shipment_refnum_value IS NULL THEN
    s.shipment_xid
  ELSE
    sref2.shipment_refnum_value
  END) 
  shipment_number
FROM
	shipment s
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
  sref1.shipment_refnum_qual_gid = 'SCOULAR.BILL OF LADING NUMBER'
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
  sref2.shipment_refnum_qual_gid = 'SCOULAR/BCO.INVOICE NUMBER'  
WHERE
	s.shipment_gid = :SHIPMENT_ID]]></sqlStatement>
    <sqlStatement name="Q_ORDER"><![CDATA[SELECT DISTINCT
  obrem1.remark_text
  drafts_at,
  obrem2.remark_text
  credit_number,
  obrem3.remark_text
  credit_date,
  obrem4.remark_text
  opening_bank,
  obrem5.remark_text
  opening_bank_address,
  obrem6.remark_text
  drawee,
  TRIM(obref1.ob_refnum_value
  || (CASE WHEN obref2.ob_refnum_value IS NULL THEN ''
  ELSE CHR(13) || obref2.ob_refnum_value END)
  || (CASE WHEN obref3.ob_refnum_value IS NULL THEN ''
  ELSE CHR(13) || obref3.ob_refnum_value END) 
  || (CASE WHEN obref4.ob_refnum_value IS NULL THEN ''
  ELSE CHR(13) || obref4.ob_refnum_value END))
  drawee_address  
FROM
	shipment s
INNER JOIN
	shipment_s_equipment_join ssej ON s.shipment_gid = ssej.shipment_gid
INNER JOIN
	s_equipment_s_ship_unit_join sessuj ON ssej.s_equipment_gid = sessuj.s_equipment_gid
INNER JOIN
	s_ship_unit_line ssul ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
	ob_order_base oob ON ssul.order_base_gid = oob.order_base_gid
LEFT OUTER JOIN
	ob_remark obrem1 ON oob.order_base_gid = obrem1.order_base_gid
AND
	obrem1.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_DRAFTS AT'
LEFT OUTER JOIN
	ob_remark obrem2 ON oob.order_base_gid = obrem2.order_base_gid
AND
	obrem2.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_LETTER OF CREDIT NUM'  
LEFT OUTER JOIN
	ob_remark obrem3 ON oob.order_base_gid = obrem3.order_base_gid
AND
	obrem3.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_LETTER OF CREDIT DATE'   
LEFT OUTER JOIN
	ob_remark obrem4 ON oob.order_base_gid = obrem4.order_base_gid
AND
	obrem4.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_OPENING BANK'  
LEFT OUTER JOIN
	ob_remark obrem5 ON oob.order_base_gid = obrem5.order_base_gid
AND
	obrem5.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_OPENING BANK ADD'  
LEFT OUTER JOIN
	ob_remark obrem6 ON oob.order_base_gid = obrem6.order_base_gid
AND
	obrem6.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_DRAWEE'  
LEFT OUTER JOIN
	ob_refnum obref1 ON oob.order_base_gid = obref1.order_base_gid
AND
	obref1.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB PAYTERM_DRAWEE ADDRESS LINE 1'
LEFT OUTER JOIN
  ob_refnum obref2 ON oob.order_base_gid = obref2.order_base_gid
AND
	obref2.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB PAYTERM_DRAWEE ADDRESS LINE 2'
LEFT OUTER JOIN
  ob_refnum obref3 ON oob.order_base_gid = obref3.order_base_gid
AND
	obref3.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB PAYTERM_DRAWEE ADDRESS LINE 3' 
LEFT OUTER JOIN
  ob_refnum obref4 ON oob.order_base_gid = obref4.order_base_gid
AND
	obref4.ob_refnum_qual_gid = 'SCOULAR/BCO.BCO_OB PAYTERM_DRAWEE CITY'     
WHERE
	s.shipment_gid = :SHIPMENT_ID]]></sqlStatement>
    <sqlStatement name="Q_TOTAL"><![CDATA[SELECT
  (UPPER(
    (CASE WHEN
      --NOTE - TO GET NUMBER TO WORDS, MUST BE FORMATTED AS A DATE - AND THE MAX JULIAN DATE IS 5373484. THIS SHOULD NOT BE AN ISSUE - MAX SHIPMENT IS IN THE $1 MILLION RANGE.
      FLOOR(b.total_cost) > 0 AND FLOOR(b.total_cost) <= 5373484 THEN TO_CHAR(TO_DATE(FLOOR(b.total_cost),	'j'),	'jsp')
    ELSE
      (CASE WHEN 
        FLOOR(b.total_cost) > 5373484 
      THEN 
        'ERROR - UNABLE TO CALCULATE' 
      ELSE 
        'ZERO' 
      END)
    END)
		) || ' AND ' ||	COALESCE(TRIM(TO_CHAR((b.total_cost * 100) - (FLOOR(b.total_cost) * 100),'00')),'00') || '/100')
  total_text,
  b.total_numonly
FROM
(SELECT
	NVL(REGEXP_REPLACE(ROUND(SUM(ROUND(a.unit_net_weight_base / 2204.5855379, 3) * TO_NUMBER(REGEXP_REPLACE(NVL(a.remark_text,0), '[^0-9,.]+', ''))) 
    - AVG(NVL(a.total_adjustment_amount, 0)),	2),'\s*',''),0)
	total_cost,
	NVL(REGEXP_REPLACE(TO_CHAR(ROUND(SUM(ROUND(a.unit_net_weight_base / 2204.5855379, 3) * TO_NUMBER(REGEXP_REPLACE(NVL(a.remark_text,0), '[^0-9,.]+', ''))) 
    - AVG(NVL(a.total_adjustment_amount, 0)),	2),'999,999,990.00'),'\s*',''),0)
	total_numonly
FROM
(SELECT DISTINCT
  ssu.s_ship_unit_gid,
  ssu.unit_net_weight_base,
  obr.remark_text,
  suat.total_adjustment_amount
FROM
	shipment s
INNER JOIN
	shipment_stop_d sstopd ON	s.shipment_gid = sstopd.shipment_gid 
AND
		sstopd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid 
AND NOT
  ssu.tag_3 IS NULL  
INNER JOIN
	shipment_s_equipment_join ssej ON s.shipment_gid = ssej.shipment_gid
INNER JOIN
	s_equipment_s_ship_unit_join sessuj ON ssej.s_equipment_gid = sessuj.s_equipment_gid
INNER JOIN
	s_ship_unit_line ssul ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
	ob_order_base oob ON ssul.order_base_gid = oob.order_base_gid  
INNER JOIN
	ob_remark obr ON oob.order_base_gid = obr.order_base_gid
AND
	obr.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_PRICE'
LEFT OUTER JOIN
	VIEW_SHIP_UNIT_ADJUST_TOTAL suat ON s.shipment_gid = suat.shipment_gid  
WHERE
  s.shipment_gid = :SHIPMENT_ID) a) b]]></sqlStatement>
  </dataQuery>
  <dataStructure>
    <group name="G_MAIN" source="Q_MAIN">
      <element name="BOOKING_DATE" value="BOOKING_DATE" />
      <element name="SHIPMENT_NUMBER" value="SHIPMENT_NUMBER" />
    </group>
    <group name="G_ORDER" source="Q_ORDER">
      <element name="DRAFTS_AT" value="DRAFTS_AT" />
      <element name="CREDIT_NUMBER" value="CREDIT_NUMBER" />
      <element name="CREDIT_DATE" value="CREDIT_DATE" />
      <element name="OPENING_BANK" value="OPENING_BANK" />
      <element name="OPENING_BANK_ADDRESS" value="OPENING_BANK_ADDRESS" />
      <element name="DRAWEE" value="DRAWEE" />
      <element name="DRAWEE_ADDRESS" value="DRAWEE_ADDRESS" />
    </group>
    <group name="G_TOTAL" source="Q_TOTAL">
      <element name="TOTAL_NUMONLY" value="TOTAL_NUMONLY" />
      <element name="TOTAL_TEXT" value="TOTAL_TEXT" />
    </group>
  </dataStructure>
</dataTemplate>