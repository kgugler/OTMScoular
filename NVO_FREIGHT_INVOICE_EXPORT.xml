<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="NVO_FREIGHT_INVOICE_EXPORT" description="NVO Freight Invoice (Export)" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <parameters>
    <parameter name="SHIPMENT_ID" dataType="character" />
    <parameter name="SUM_PIECES" dataType="character" />
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_MAIN"><![CDATA[SELECT DISTINCT
	glogowner.xxscou_nvo_report_functions.entity_name(s.shipment_gid,'XXX','BILL-TO') 
  bill_name,
  (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','BILL-TO','2') IS NULL THEN
    TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','BILL-TO','1'))
  ELSE
    TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','BILL-TO','1') || CHR(13) ||
    glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','BILL-TO','2'))
  END)
  bill_address,
  TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','BILL-TO',',') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','BILL-TO') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','BILL-TO') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','BILL-TO'))
  bill_city_state_zip,
	glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','BILL-TO','TEL:') 
  bill_phone,
	glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'XXX','BILL-TO','FAX:') 
  bill_fax,
	glogowner.xxscou_nvo_report_functions.number_with_japan_tsc(cv.charter_voyage_gid,'SCOULAR.CHARVOY_VIA_PORT_OF_DISCHARGE',cv.dest_location_gid,'SCOULAR.CHARVOY_TRANSHIP PORT')
  || j.job_xid bill_lading,
	cvr1.charter_voyage_refnum_value 
  booking_number,
	j.attribute3 export_references,
  (CASE WHEN sref2.shipment_refnum_value IS NULL THEN
    sref3.shipment_refnum_value
  ELSE
    sref2.shipment_refnum_value
  END) 
  voyage_name,
  sref1.shipment_refnum_value 
  place_of_receipt,
  glogowner.xxscou_nvo_report_functions.port_place_pr(s.shipment_gid,'SCOULAR/NVO.PORT OF LOAD',s.port_of_load_location_gid)
  load_port,
	glogowner.xxscou_nvo_report_functions.port_place(s.shipment_gid,'SCOULAR/NVO.PORT OF DISCHARGE',s.port_of_dis_location_gid)
  discharge_port,
  glogowner.xxscou_nvo_report_functions.port_place(s.shipment_gid,'SCOULAR/NVO.PLACE OF DELIVERY',sh.dest_location_gid)
  place_of_delivery,
  (CASE WHEN cv.actual_departure_date IS NULL THEN
    TO_CHAR(cv.departure_date,'MM/DD/YYYY') 
  ELSE
    TO_CHAR(glogowner.utc.get_local_date(cv.actual_departure_date,cv.source_location_gid),'MM/DD/YYYY')
  END)
  departure_date,
	TO_CHAR(TO_DATE(cv.arrival_date,'dd-mm-rr'), 'fmMM/DD/YY') 
  arrival_date,
  (CASE WHEN glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','2') IS NULL THEN
    TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','1'))   
  ELSE
    TRIM(glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','1') || CHR(13) ||
    glogowner.xxscou_nvo_report_functions.entity_address(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','2'))       
  END) 
  loc_address,
  TRIM(glogowner.xxscou_nvo_report_functions.entity_city(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER',',') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_province(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_zip(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER') || ' ' || 
  glogowner.xxscou_nvo_report_functions.entity_country(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER'))
  loc_city_state_zip,
  glogowner.xxscou_nvo_report_functions.entity_phone_with_label(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','TEL:')
  loc_phone,
  glogowner.xxscou_nvo_report_functions.entity_fax_with_label(s.shipment_gid,'XXX','SCOULAR/NVO.OPS MANAGER','FAX:')
  loc_fax,    
  (SELECT LISTAGG(TRIM(TO_CHAR(COUNT(ssu.s_ship_unit_gid),'99990')) || ' X ' || 
  (CASE WHEN ssu.received_ship_unit_count = 19 THEN 'LCL'
  WHEN ssu.received_ship_unit_count = 20 THEN '20'''
  WHEN ssu.received_ship_unit_count = 21 THEN '20''RF'
  WHEN ssu.received_ship_unit_count = 40 THEN '40'''
  WHEN ssu.received_ship_unit_count = 41 THEN '40''HCRF'
  WHEN ssu.received_ship_unit_count = 42 THEN '40''HC'  
  WHEN ssu.received_ship_unit_count = 45 THEN '45'''
  WHEN ssu.received_ship_unit_count = 46 THEN '45''RF' END), CHR(13))
  WITHIN GROUP (ORDER BY ssu.received_ship_unit_count) 
  FROM	shipment_stop_d ssd
  INNER JOIN s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE ssd.shipment_gid = s.shipment_gid
  AND ssd.stop_num = 1
  GROUP BY ssu.received_ship_unit_count)
  container_count,  
  REPLACE(srem1.remark_text,'|',CHR(13))
  descript_of_cargo,
  (CASE WHEN 
  (SELECT COUNT (ssur.remark_text) 
  FROM s_ship_unit_remark ssur 
  INNER JOIN s_ship_unit ssu ON ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  INNER JOIN shipment_stop_d ssd ON ssu.s_ship_unit_gid = ssd.s_ship_unit_gid
  AND ssd.stop_num = 1
  WHERE ssd.shipment_gid = s.shipment_gid
  AND ssur.remark_qual_gid = 'SCOULAR/NVO.DESCRIPTION OF CARGO OVERRIDE') > 0 
  THEN 'Y' ELSE 'N' END) 
  ssu_y_n   
FROM
  shipment sh
INNER JOIN
  shipment_s_equipment_join ssej1 ON sh.shipment_gid = ssej1.shipment_gid
INNER JOIN
  s_equipment_s_ship_unit_join sessuj1 ON ssej1.s_equipment_gid = sessuj1.s_equipment_gid
INNER JOIN
  s_ship_unit_line ssul1 ON ssul1.s_ship_unit_gid = sessuj1.s_ship_unit_gid
INNER JOIN
  job_order_release_join jorj1 ON ssul1.order_release_gid = jorj1.order_release_gid
INNER JOIN
	job j ON jorj1.job_gid = j.job_gid
INNER JOIN
  job_order_release_join jorj2 ON ssul1.order_release_gid = jorj2.order_release_gid  
INNER JOIN 
  s_ship_unit_line ssul2 ON jorj2.order_release_gid = ssul2.order_release_gid
INNER JOIN 
  s_equipment_s_ship_unit_join sessuj2 ON sessuj2.s_ship_unit_gid = ssul2.s_ship_unit_gid
INNER JOIN 
  shipment_s_equipment_join ssej2 ON sessuj2.s_equipment_gid = ssej2.s_equipment_gid
INNER JOIN
  shipment s ON ssej2.shipment_gid = s.shipment_gid
AND
	s.perspective = 'B'
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
LEFT OUTER JOIN
	shipment_refnum sr1 ON s.shipment_gid = sr1.shipment_gid
AND
	sr1.shipment_refnum_qual_gid = 'CHARTER VOYAGE'		
LEFT OUTER JOIN
	charter_voyage cv ON 'SCOULAR/NVO.' || sr1.shipment_refnum_value = cv.charter_voyage_gid
LEFT OUTER JOIN
  vessel v ON cv.vessel_gid = v.vessel_gid    
LEFT OUTER JOIN
	charter_voyage_refnum cvr1 ON cv.charter_voyage_gid = cvr1.charter_voyage_gid
AND
	cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CURRENT BOOKING NUMBER'
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
	sref1.shipment_refnum_qual_gid = 'SCOULAR/NVO.PLACE OF RECEIPT'	
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
	sref2.shipment_refnum_qual_gid = 'SCOULAR/NVO.VESSEL_VOYAGE'  
LEFT OUTER JOIN
	shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
	sref3.shipment_refnum_qual_gid = 'SCOULAR/NVO.BOOKING_VESSEL_VOYAGE'    
LEFT OUTER JOIN
	shipment_remark srem1 ON s.shipment_gid = srem1.shipment_gid
AND
	srem1.remark_qual_gid = 'SCOULAR/NVO.HBL DESCRIPTION OF CARGO'
LEFT OUTER JOIN
	location l1 ON cv.source_location_gid = l1.location_gid
LEFT OUTER JOIN
	country_code cc1 ON l1.country_code3_gid = cc1.country_code3_gid
LEFT OUTER JOIN
	location l2 ON cv.dest_location_gid = l2.location_gid
LEFT OUTER JOIN
	country_code cc2 ON l2.country_code3_gid = cc2.country_code3_gid 
WHERE
	sh.shipment_gid = :SHIPMENT_ID]]></sqlStatement>
    <sqlStatement name="Q_INVOICE"><![CDATA[SELECT DISTINCT
  loc.location_name
  bill_name,
  glogowner.xxscou_nvo_report_functions.loc_address(loc.location_gid)
  bill_address,
  glogowner.xxscou_nvo_report_functions.loc_city_state_zip(loc.location_gid)
  bill_city_state_zip,
  glogowner.xxscou_nvo_report_functions.contact_phone_with_label(con.contact_gid,'TEL:')
  bill_phone,
  glogowner.xxscou_nvo_report_functions.contact_fax_with_label(con.contact_gid,'FAX:')
  bill_fax,
	inv.invoice_xid
	invoice_xid,
	TO_CHAR(TO_DATE(inv.invoice_date,'dd-mm-rr'), 'fmMM/DD/YY')
	invoice_date,
	gpr.refnum_value
	invoice_terms,
	TO_CHAR(TO_DATE(inv.net_due_date,'dd-mm-rr'), 'fmMM/DD/YY')
	invoice_due_date,
	invr.remark_text
	remark_text,
  (CASE WHEN s.total_actual_cost < 0 THEN
    'CREDIT NOTE'
  ELSE
    'FREIGHT INVOICE'
  END) report_title
FROM
	shipment s
LEFT OUTER JOIN
	shipment_involved_party sip ON s.shipment_gid = sip.shipment_gid
AND
	sip.involved_party_qual_gid = 'BILL-TO'
LEFT OUTER JOIN
	gtm_party_refnum gpr ON sip.involved_party_contact_gid = gpr.contact_gid
AND
	gpr.gtm_party_refnum_qual_gid = 'SCOULAR.PAYMENT TERMS'
LEFT OUTER JOIN
	shipment_bill sb ON s.shipment_gid = sb.shipment_gid
LEFT OUTER JOIN
	invoice inv ON sb.bill_gid = inv.invoice_gid
LEFT OUTER JOIN
  invoice_involved_party iip ON inv.invoice_gid = iip.invoice_gid
AND
	iip.involved_party_qual_gid = 'BILL-TO'  
LEFT OUTER JOIN 
  contact con ON iip.involved_party_contact_gid = con.contact_gid                                                                 
LEFT OUTER JOIN 
  location loc ON con.location_gid = loc.location_gid    
LEFT OUTER JOIN
	invoice_remark invr ON inv.invoice_gid = invr.invoice_gid
AND
	remark_qual_identifier = 'SCOULAR/NVO.FREIGHT INVOICE REMARKS'
WHERE
	s.shipment_gid = :SHIPMENT_ID]]></sqlStatement>
    <sqlStatement name="Q_PCS"><![CDATA[SELECT 
  glogowner.xxscou_nvo_report_functions.count_of_pieces_shipment(:SUM_PIECES,:SHIPMENT_ID)
  piece_count
FROM 
  DUAL]]></sqlStatement>
    <sqlStatement name="Q_ROWS"><![CDATA[SELECT 
  a.s_ship_unit_gid,
  a.container_num, 
  TRIM(a.tag_1 || ' ' || a.seal_2 || ' ' || a.seal_3)
  seal_num,
  a.short_desc
FROM
(SELECT DISTINCT
  ssu.s_ship_unit_gid,
	ssu.tag_3 container_num, 
  ssu.tag_1,
  (SELECT ssur.refnum_value
  FROM s_ship_unit_refnum ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.s_ship_unit_refnum_qual_gid = 'SCOULAR.CONTAINER SEAL NUMBER 2') seal_2,
  (SELECT ssur.refnum_value
  FROM s_ship_unit_refnum ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.s_ship_unit_refnum_qual_gid = 'SCOULAR.CONTAINER SEAL NUMBER 3') seal_3,
  (SELECT ssur.remark_text
  FROM s_ship_unit_remark ssur 
  WHERE ssur.s_ship_unit_gid = ssu.s_ship_unit_gid
  AND ssur.remark_qual_gid = 'SCOULAR/NVO.DESCRIPTION OF CARGO OVERRIDE') 
  short_desc  
FROM
  shipment sh
LEFT OUTER JOIN
  shipment_s_equipment_join ssej1 ON sh.shipment_gid = ssej1.shipment_gid
LEFT OUTER JOIN
  s_equipment_s_ship_unit_join sessuj1 ON ssej1.s_equipment_gid = sessuj1.s_equipment_gid
LEFT OUTER JOIN
  s_ship_unit_line ssul1 ON ssul1.s_ship_unit_gid = sessuj1.s_ship_unit_gid
LEFT OUTER JOIN
  job_order_release_join jorj1 ON ssul1.order_release_gid = jorj1.order_release_gid
LEFT OUTER JOIN
	job j ON jorj1.job_gid = j.job_gid
LEFT OUTER JOIN
  job_order_release_join jorj2 ON ssul1.order_release_gid = jorj2.order_release_gid  
LEFT OUTER JOIN 
  s_ship_unit_line ssul2 ON jorj2.order_release_gid = ssul2.order_release_gid
LEFT OUTER JOIN 
  s_equipment_s_ship_unit_join sessuj2 ON sessuj2.s_ship_unit_gid = ssul2.s_ship_unit_gid
LEFT OUTER JOIN 
  shipment_s_equipment_join ssej2 ON sessuj2.s_equipment_gid = ssej2.s_equipment_gid
LEFT OUTER JOIN
  shipment s ON ssej2.shipment_gid = s.shipment_gid
AND
	s.perspective = 'B'
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.transport_mode_gid = 'VESSEL-CO'
AND
	s.is_primary = 'Y'
INNER JOIN
	shipment_stop_d ssd ON s.shipment_gid = ssd.shipment_gid
AND
	ssd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
WHERE
	sh.shipment_gid = :SHIPMENT_ID) a
ORDER BY a.s_ship_unit_gid ASC]]></sqlStatement>
    <sqlStatement name="Q_TOTALS"><![CDATA[SELECT DISTINCT
  (CASE WHEN (a.weight1 IS NULL AND a.weight2 IS NULL AND a.weight3 IS NULL) THEN
    TRIM(TO_CHAR(ROUND(SUM(a.received_weight),3),'999,999,990.000'))
  ELSE
    a.weight1
  END)
  total_wt_gross,
  a.weight2 total_wt_net,
  a.weight3 weight_three,
  (CASE WHEN a.weight1 IS NULL THEN
    a.received_weight_uom
  ELSE
    ''
  END) weight_uom
FROM
(SELECT DISTINCT
  ssu.s_ship_unit_gid,
  ssu.received_weight,
  ssu.received_weight_uom,
  sref1.shipment_refnum_value weight1,
  sref2.shipment_refnum_value weight2,
  sref3.shipment_refnum_value weight3
FROM
  shipment sh
LEFT OUTER JOIN
  shipment_s_equipment_join ssej1 ON sh.shipment_gid = ssej1.shipment_gid
LEFT OUTER JOIN
  s_equipment_s_ship_unit_join sessuj1 ON ssej1.s_equipment_gid = sessuj1.s_equipment_gid
LEFT OUTER JOIN
  s_ship_unit_line ssul1 ON ssul1.s_ship_unit_gid = sessuj1.s_ship_unit_gid
LEFT OUTER JOIN
  job_order_release_join jorj1 ON ssul1.order_release_gid = jorj1.order_release_gid
LEFT OUTER JOIN
	job j ON jorj1.job_gid = j.job_gid
LEFT OUTER JOIN
  job_order_release_join jorj2 ON ssul1.order_release_gid = jorj2.order_release_gid  
LEFT OUTER JOIN 
  s_ship_unit_line ssul2 ON jorj2.order_release_gid = ssul2.order_release_gid
LEFT OUTER JOIN 
  s_equipment_s_ship_unit_join sessuj2 ON sessuj2.s_ship_unit_gid = ssul2.s_ship_unit_gid
LEFT OUTER JOIN 
  shipment_s_equipment_join ssej2 ON sessuj2.s_equipment_gid = ssej2.s_equipment_gid
LEFT OUTER JOIN
  shipment s ON ssej2.shipment_gid = s.shipment_gid
AND
	s.perspective = 'B'
AND
	s.shipment_type_gid = 'TRANSPORT'
AND
	s.is_primary = 'Y'
INNER JOIN
	shipment_stop_d ssd ON s.shipment_gid = ssd.shipment_gid
AND
	ssd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
LEFT OUTER JOIN
	shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
	sref1.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 1'	
LEFT OUTER JOIN
	shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
	sref2.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 2'
LEFT OUTER JOIN
	shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
	sref3.shipment_refnum_qual_gid = 'SCOULAR/NVO.WEIGHT VALUE 3'
WHERE
	sh.shipment_gid = :SHIPMENT_ID) a
GROUP BY a.received_weight_uom, a.weight1, a.weight2, a.weight3]]></sqlStatement>
    <sqlStatement name="Q_RATES"><![CDATA[ SELECT
  a.sort_order,
  a.rates,
  a.notes,
  (CASE WHEN a.cost_type = 'B' OR ((NOT UPPER(a.detail) LIKE '%BOL%' OR NOT a.remark_text = 'YES')
   OR (a.detail IS NULL AND a.remark_text IS NULL)) THEN
    (CASE WHEN (SELECT COUNT(scost.shipment_cost_seqno) 
      FROM shipment_cost scost WHERE scost.shipment_gid = a.shipment_gid
      AND scost.cost_type = 'B') = 1 THEN
        TRIM(TO_CHAR(a.total_ship_unit_count,'999,999,990')) || ' ' || 
        (CASE
        WHEN NOT
        (SELECT cvr1.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr1
        WHERE cvr1.charter_voyage_gid = a.charter_voyage_gid
        AND cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_20FTRF COUNT') IS NULL THEN
        '20 FT RF'  
        WHEN NOT
        (SELECT cvr1.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr1
        WHERE cvr1.charter_voyage_gid = a.charter_voyage_gid
        AND cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_TEU COUNT') IS NULL THEN
        '20 FT'
        WHEN NOT
        (SELECT cvr2.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr2
        WHERE cvr2.charter_voyage_gid = a.charter_voyage_gid
        AND cvr2.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FT COUNT') IS NULL THEN
        '40 FT'
        WHEN NOT
        (SELECT cvr3.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr3
        WHERE cvr3.charter_voyage_gid = a.charter_voyage_gid
        AND cvr3.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTHC COUNT') IS NULL THEN
        '40 FT HC'
        WHEN NOT
        (SELECT cvr4.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr4
        WHERE cvr4.charter_voyage_gid = a.charter_voyage_gid
        AND cvr4.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_40FTRF COUNT') IS NULL THEN
        '40 FT RF'
        WHEN NOT
        (SELECT cvr5.charter_voyage_refnum_value
        FROM charter_voyage_refnum cvr5
        WHERE cvr5.charter_voyage_gid = a.charter_voyage_gid
        AND cvr5.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_45FTRF COUNT') IS NULL THEN
        '45 FT RF' 
        END) || ' @ ' ||
        TRIM(TO_CHAR(ROUND(a.cost / a.total_ship_unit_count, 2),'999,999,990.00')) 
      ELSE
        TRIM(TO_CHAR(a.cost, '999,999,990.00'))
      END)
  ELSE 
    TRIM(TO_CHAR(a.cost, '999,999,990.00'))
  END) base,
  a.r_prepaid,
  a.r_collect
FROM
(SELECT DISTINCT
  (CASE WHEN sc.cost_type = 'B' THEN 1
  WHEN sc.cost_type = 'A' THEN 2
  WHEN sc.cost_type = 'O' THEN 3
  ELSE 4 END) sort_order,
  sc.shipment_cost_seqno,
  (CASE WHEN sc.cost_type = 'B' THEN
    'O/F'
  ELSE    
    (SELECT ac.accessorial_code_xid
    FROM accessorial_code ac
    WHERE ac.accessorial_code_gid = sc.accessorial_code_gid)
  END) rates,
  sc.cost_type,
  sc.cost,
  scd.detail,
  scr1.remark_text,
  scr2.remark_text
  notes,
  (SELECT COUNT(ssu.s_ship_unit_gid)
  FROM shipment_stop_d ssd
  INNER JOIN s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE ssd.shipment_gid = s.shipment_gid
  AND stop_num = 1)
  total_ship_unit_count,
  s.shipment_gid,
  (SELECT DISTINCT cv1.charter_voyage_gid
  FROM shipment_s_equipment_join ssej1
  INNER JOIN s_equipment_s_ship_unit_join sessuj1 ON ssej1.s_equipment_gid = sessuj1.s_equipment_gid
  INNER JOIN s_ship_unit_line ssul1 ON ssul1.s_ship_unit_gid = sessuj1.s_ship_unit_gid
  INNER JOIN job_order_release_join jorj1 ON ssul1.order_release_gid = jorj1.order_release_gid
  INNER JOIN job j ON jorj1.job_gid = j.job_gid
  INNER JOIN job_order_release_join jorj2 ON ssul1.order_release_gid = jorj2.order_release_gid  
  INNER JOIN s_ship_unit_line ssul2 ON jorj2.order_release_gid = ssul2.order_release_gid
  INNER JOIN s_equipment_s_ship_unit_join sessuj2 ON sessuj2.s_ship_unit_gid = ssul2.s_ship_unit_gid
  INNER JOIN shipment_s_equipment_join ssej2 ON sessuj2.s_equipment_gid = ssej2.s_equipment_gid
  INNER JOIN shipment s1 ON ssej2.shipment_gid = s1.shipment_gid
  AND s1.perspective = 'B'
  AND s1.shipment_type_gid = 'TRANSPORT'
  AND s1.transport_mode_gid = 'VESSEL-CO'
  AND s1.is_primary = 'Y'
  INNER JOIN shipment_refnum sr1 ON s1.shipment_gid = sr1.shipment_gid
  AND sr1.shipment_refnum_qual_gid = 'CHARTER VOYAGE'		
  INNER JOIN charter_voyage cv1 ON 'SCOULAR/NVO.' || sr1.shipment_refnum_value = cv1.charter_voyage_gid  
  WHERE ssej1.shipment_gid = :SHIPMENT_ID
  AND NOT s1.shipment_gid IS NULL) charter_voyage_gid,  
  (CASE WHEN sc.payment_method_code_gid = 'PPD' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'PPD') THEN TRIM(TO_CHAR(sc.cost, '999,999,990.00')) ELSE '' END) r_prepaid,
  (CASE WHEN sc.payment_method_code_gid = 'COL' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'COL') THEN TRIM(TO_CHAR(sc.cost, '999,999,990.00')) ELSE '' END) r_collect
FROM
	shipment_cost sc
INNER JOIN 
  shipment s ON sc.shipment_gid = s.shipment_gid
LEFT OUTER JOIN
  shipment_cost_detail scd ON sc.shipment_cost_seqno = scd.shipment_cost_seqno    
LEFT OUTER JOIN
  shipment_cost_remark scr1 ON sc.shipment_cost_seqno = scr1.shipment_cost_seqno   
AND
  scr1.remark_qual_gid = 'SCOULAR/NVO.IS_COST_PER_BOL'
LEFT OUTER JOIN
  shipment_cost_remark scr2 ON sc.shipment_cost_seqno = scr2.shipment_cost_seqno   
AND
  scr2.remark_qual_gid = 'SCOULAR/NVO.FREIGHT INVOICE REMARKS'  
WHERE
  sc.shipment_gid = :SHIPMENT_ID
AND 
  (NOT sc.billable_indicator_gid = 'NOT_BILLABLE' OR sc.billable_indicator_gid IS NULL)  
) a
ORDER BY a.sort_order]]></sqlStatement>
    <sqlStatement name="Q_RTOTALS"><![CDATA[SELECT TRIM(TO_CHAR(SUM(a.total_p), '999,999,990.00')) total_ppd, TRIM(TO_CHAR(SUM(a.total_c), '999,999,990.00')) total_col
FROM 
(SELECT DISTINCT
  sc.shipment_cost_seqno,
  (CASE WHEN sc.payment_method_code_gid = 'PPD' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'PPD')
  THEN sc.cost ELSE 0 END) total_p,
  (CASE WHEN sc.payment_method_code_gid = 'COL' OR (sc.payment_method_code_gid IS NULL AND s.payment_method_code_gid = 'COL')
  THEN sc.cost ELSE 0 END) total_c  
FROM
	shipment s
INNER JOIN 
  shipment_cost sc ON s.shipment_gid = sc.shipment_gid
AND 
  (NOT sc.billable_indicator_gid = 'NOT_BILLABLE' OR sc.billable_indicator_gid IS NULL)    
WHERE
  s.shipment_gid = :SHIPMENT_ID
) a]]></sqlStatement>
    <sqlStatement name="Q_TOTAMT"><![CDATA[SELECT TRIM(TO_CHAR(SUM(a.cost), '999,999,990.00')) total_amount
FROM 
(SELECT DISTINCT
  sc.shipment_cost_seqno,
  sc.cost
FROM
	shipment s
INNER JOIN 
  shipment_cost sc ON s.shipment_gid = sc.shipment_gid
AND 
  (NOT sc.billable_indicator_gid = 'NOT_BILLABLE' OR sc.billable_indicator_gid IS NULL)    
WHERE
  s.shipment_gid = :SHIPMENT_ID
) a]]></sqlStatement>
  </dataQuery>
  <dataStructure>
    <group name="G_MAIN" source="Q_MAIN">
      <element name="BILL_LADING" value="BILL_LADING" />
      <element name="BOOKING_NUMBER" value="BOOKING_NUMBER" />
      <element name="EXPORT_REFERENCES" value="EXPORT_REFERENCES" />
      <element name="VOYAGE_NAME" value="VOYAGE_NAME" />
      <element name="PLACE_OF_RECEIPT" value="PLACE_OF_RECEIPT" />
      <element name="LOAD_PORT" value="LOAD_PORT"></element>
      <element name="DISCHARGE_PORT" value="DISCHARGE_PORT" />
      <element name="PLACE_OF_DELIVERY" value="PLACE_OF_DELIVERY"></element>
      <element name="DEPARTURE_DATE" value="DEPARTURE_DATE" />
      <element name="ARRIVAL_DATE" value="ARRIVAL_DATE" />
      <element name="LOC_ADDRESS" value="LOC_ADDRESS" />
      <element name="LOC_CITY_STATE_ZIP" value="LOC_CITY_STATE_ZIP" />
      <element name="LOC_PHONE" value="LOC_PHONE" />
      <element name="LOC_FAX" value="LOC_FAX"></element>
      <element name="CONTAINER_COUNT" value="CONTAINER_COUNT"></element>
      <element name="DESCRIPT_OF_CARGO" value="DESCRIPT_OF_CARGO"></element>
      <element name="SSU_Y_N" value="SSU_Y_N"></element>
    </group>
    <group name="G_INVOICE" source="Q_INVOICE">
      <element name="BILL_NAME" value="BILL_NAME" />
      <element name="BILL_ADDRESS" value="BILL_ADDRESS" />
      <element name="BILL_CITY_STATE_ZIP" value="BILL_CITY_STATE_ZIP" />
      <element name="BILL_PHONE" value="BILL_PHONE" />
      <element name="BILL_FAX" value="BILL_FAX" />
      <element name="INVOICE_XID" value="INVOICE_XID"></element>
      <element name="INVOICE_DATE" value="INVOICE_DATE" />
      <element name="INVOICE_TERMS" value="INVOICE_TERMS" />
      <element name="INVOICE_DUE_DATE" value="INVOICE_DUE_DATE" />
      <element name="REMARK_TEXT" value="REMARK_TEXT" />
      <element name="REPORT_TITLE" value="REPORT_TITLE"></element>
    </group>
    <group name="G_PCS" source="Q_PCS">
      <element name="PIECE_COUNT" value="PIECE_COUNT" />
    </group>
    <group name="G_ROWS" source="Q_ROWS">
      <element name="CONTAINER_NUM" value="CONTAINER_NUM" />
      <element name="SEAL_NUM" value="SEAL_NUM" />
      <element name="SHORT_DESC" value="SHORT_DESC" />
    </group>
    <group name="G_TOTALS" source="Q_TOTALS">
      <element name="TOTAL_WT_GROSS" value="TOTAL_WT_GROSS"></element>
      <element name="TOTAL_WT_NET" value="TOTAL_WT_NET"></element>
      <element name="WEIGHT_THREE" value="WEIGHT_THREE"></element>
      <element name="WEIGHT_UOM" value="WEIGHT_UOM"></element>
    </group>
    <group name="G_RATES" source="Q_RATES">
      <element name="RATES" value="RATES"></element>
      <element name="BASE" value="BASE"></element>
      <element name="R_PREPAID" value="R_PREPAID"></element>
      <element name="R_COLLECT" value="R_COLLECT"></element>
    </group>
    <group name="G_RTOTALS" source="Q_RTOTALS">
      <element name="TOTAL_PPD" value="TOTAL_PPD"></element>
      <element name="TOTAL_COL" value="TOTAL_COL"></element>
    </group>
    <group name="G_TOTAMT" source="Q_TOTAMT">
      <element name="TOTAL_AMOUNT" value="TOTAL_AMOUNT"></element>
    </group>
  </dataStructure>
</dataTemplate>