<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="SHIPMENT_SUMMARY_BY_CREATE_DATE" description="Shipment Summary by Create Date" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <parameters>
    <parameter name="START_DATE" dataType="character" />
    <parameter name="END_DATE" dataType="character" />
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_PARAM"><![CDATA[SELECT
  :START_DATE start_dt, :END_DATE end_dt
FROM DUAL]]></sqlStatement>
    <sqlStatement name="Q_ROWS"><![CDATA[SELECT
  sh.shipment_gid,
  TRIM(TO_CHAR(ROUND(sh.total_actual_cost_base,2),'999,999,990.00'))
  actual_cost,
  TRIM(TO_CHAR(ROUND((SELECT SUM(ssu.unit_net_weight_base)
  FROM shipment_stop_d ssd
  INNER JOIN s_ship_unit ssu ON ssd.s_ship_unit_gid = ssu.s_ship_unit_gid
  WHERE ssd.shipment_gid = sh.shipment_gid
  AND ssd.activity = 'P'),2),'999,999,990.00'))
  actual_weight,
  sref1.shipment_refnum_value commodity,
  TO_CHAR((CASE WHEN sh.dest_location_gid IS NULL THEN
    sh.end_time
  ELSE
    utc.get_local_date(sh.end_time,sh.dest_location_gid)
  END),'MM/DD/YYYY')
  delivery_date,
  loc1.city dest_city,
  loc1.location_name dest_name,
  loc1.province_code dest_state,
  (SELECT eg.equipment_group_xid
  FROM shipment_s_equipment_join ssej 
  INNER JOIN s_equipment seq ON ssej.s_equipment_gid = seq.s_equipment_gid   
  INNER JOIN equipment_group eg ON seq.equipment_group_gid = eg.equipment_group_gid
  WHERE ssej.shipment_gid = sh.shipment_gid)
  first_equip_gp_id,
  TRIM(TO_CHAR(ROUND(sh.attribute_currency1,2),'999,999,990.00'))
  freight,
  TRIM(TO_CHAR(ROUND(sh.attribute_currency2,2),'999,999,990.00'))
  fuel,
  (TO_CHAR(from_tz(CAST(sh.insert_date AS TIMESTAMP), 'GMT') AT TIME ZONE 'US/Central', 'MM/DD/YY'))
  insert_date,
  sref2.shipment_refnum_value loc,
  TRIM(TO_CHAR(ROUND((SELECT SUM(ss.dist_from_prev_stop_base)
  FROM shipment_stop ss
  WHERE ss.shipment_gid = sh.shipment_gid),2),'999,999,990.00'))
  miles,
  sh.transport_mode_gid trans_mode,
  loc2.city origin_city,
  loc2.location_name origin_name,
  loc2.province_code origin_state,
  REPLACE(sh.insert_user,'SCOULAR/FOOD.','') planner,
  con2.contact_xid servprov,
  TO_CHAR((CASE WHEN sh.source_location_gid IS NULL THEN
    sh.start_time
  ELSE
    utc.get_local_date(sh.start_time,sh.source_location_gid)
  END),'MM/DD/YYYY')
  ship_date
FROM 
  shipment sh
LEFT OUTER JOIN
  shipment_refnum sref1 ON sh.shipment_gid = sref1.shipment_gid
AND
  sref1.shipment_refnum_qual_gid = 'SCOULAR.COMMODITY'
LEFT OUTER JOIN
  shipment_refnum sref2 ON sh.shipment_gid = sref2.shipment_gid
AND
  sref2.shipment_refnum_qual_gid = 'SCOULAR.LOC_CODE'  
LEFT OUTER JOIN
  location loc1 ON sh.dest_location_gid = loc1.location_gid
LEFT OUTER JOIN
  location loc2 ON sh.source_location_gid = loc2.location_gid
LEFT OUTER JOIN
  contact con1 ON sh.insert_user = con1.contact_gid
LEFT OUTER JOIN
  contact con2 ON sh.servprov_gid = con2.contact_gid
WHERE
  sh.domain_name = 'SCOULAR/FOOD'
AND
  sh.shipment_type_gid = 'TRANSPORT' 
AND 
  (TO_DATE(TO_CHAR(from_tz(CAST(sh.insert_date AS TIMESTAMP), 'GMT') 
    AT TIME ZONE 'US/Central', 'MM/DD/YY'),'MM/DD/YY') >=  TO_DATE(:START_DATE,'YYYY-MM-DD')
AND
  TO_DATE(TO_CHAR(from_tz(CAST(sh.insert_date AS TIMESTAMP), 'GMT') 
    AT TIME ZONE 'US/Central', 'MM/DD/YY'),'MM/DD/YY') <=  TO_DATE(:END_DATE,'YYYY-MM-DD'))
AND NOT EXISTS
  (SELECT ss.status_value_gid
  FROM shipment_status ss
  WHERE ss.status_type_gid = 'SCOULAR/FOOD.SHIPMENT_CANCELLED'
  AND ss.status_value_gid = 'SCOULAR/FOOD.SHIPMENT_CANCELLED_YES'
  AND ss.shipment_gid = sh.shipment_gid)
ORDER BY
  insert_date DESC]]></sqlStatement>
  </dataQuery>
  <dataStructure>
    <group name="G_PARAM" source="Q_PARAM">
      <element name="START_DT" value="START_DT"></element>
      <element name="END_DT" value="END_DT"></element>
    </group>
    <group name="G_ROWS" source="Q_ROWS">
      <element name="ACTUAL_COST" value="ACTUAL_COST"></element>
      <element name="ACTUAL_WEIGHT" value="ACTUAL_WEIGHT"></element>
      <element name="COMMODITY" value="COMMODITY" />
      <element name="DELIVERY_DATE" value="DELIVERY_DATE" />
      <element name="DEST_CITY" value="DEST_CITY" />
      <element name="DEST_NAME" value="DEST_NAME" />
      <element name="DEST_STATE" value="DEST_STATE" />
      <element name="FIRST_EQUIP_GP_ID" value="FIRST_EQUIP_GP_ID"></element>
      <element name="FREIGHT" value="FREIGHT" />
      <element name="FUEL" value="FUEL"></element>
      <element name="INSERT_DATE" value="INSERT_DATE"></element>
      <element name="LOC" value="LOC"></element>
      <element name="MILES" value="MILES"></element>
      <element name="TRANS_MODE" value="TRANS_MODE"></element>
      <element name="ORIGIN_CITY" value="ORIGIN_CITY"></element>
      <element name="ORIGIN_NAME" value="ORIGIN_NAME"></element>
      <element name="ORIGIN_STATE" value="ORIGIN_STATE"></element>
      <element name="PLANNER" value="PLANNER"></element>
      <element name="SERVPROV" value="SERVPROV"></element>
      <element name="SHIP_DATE" value="SHIP_DATE"></element>
    </group>
  </dataStructure>
</dataTemplate>