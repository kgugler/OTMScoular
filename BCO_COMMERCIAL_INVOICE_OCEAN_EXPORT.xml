<?xml version="1.0" encoding="utf-8"?>
<dataTemplate name="BCO_COMMERCIAL_INVOICE_OCEAN_EXPORT" description="BCO Ocean Export Commercial Invoice Mexico" dataSourceRef="ORCL" defaultPackage="" version="1.0">
  <parameters>
    <parameter name="SHIPMENT_ID" dataType="character" />
  </parameters>
  <lexicals></lexicals>
  <dataQuery>
    <sqlStatement name="Q_MAIN"><![CDATA[SELECT DISTINCT
  sref8.shipment_refnum_value
  invoice_number,
  (CASE WHEN  sref1.shipment_refnum_value IS NULL OR sref1.shipment_refnum_value LIKE '%ORDER OF%' OR sref1.shipment_refnum_value LIKE '%TO ORDER%' THEN
    (CASE WHEN NOT loc4.location_name IS NULL THEN
      loc4.location_name || CHR(13)
    ELSE
      ''
    END) ||
    (CASE WHEN (SELECT COUNT(la1.address_line)
    FROM location_address la1 
    WHERE la1.location_gid = loc4.location_gid) > 0 THEN
      (SELECT LISTAGG(la1.address_line, CHR(13)) 
      WITHIN GROUP (ORDER BY la1.line_sequence) 
      FROM location_address la1 
      WHERE la1.location_gid = loc4.location_gid) || CHR(13)
    ELSE
      ''
    END)
    ||  
    (CASE WHEN NOT loc4.city IS NULL THEN
      loc4.city
    ELSE
      ''      
    END) ||    
    (CASE WHEN NOT loc4.province_code IS NULL THEN
      (CASE WHEN NOT loc4.city IS NULL THEN
        ', ' || loc4.province_code || CHR(13) 
      ELSE
        loc4.province_code || CHR(13) 
      END)
    ELSE
      '' || CHR(13)     
    END) ||
    (CASE WHEN NOT loc4.country_code3_gid IS NULL THEN
      cc.country_name
    ELSE
      ''
    END)
  ELSE
    (CASE WHEN NOT sref1.shipment_refnum_value IS NULL THEN
      sref1.shipment_refnum_value || CHR(13)
    ELSE
      ''       
    END) ||
    (CASE WHEN NOT sref2.shipment_refnum_value IS NULL THEN
      sref2.shipment_refnum_value || CHR(13)
    ELSE
      ''       
    END) ||
    (CASE WHEN NOT sref3.shipment_refnum_value IS NULL THEN
      sref3.shipment_refnum_value || CHR(13)
    ELSE
      ''       
    END) ||
    (CASE WHEN NOT sref4.shipment_refnum_value IS NULL THEN
      sref4.shipment_refnum_value || CHR(13)
    ELSE
      ''
    END) ||    
    (CASE WHEN NOT sref5.shipment_refnum_value IS NULL THEN
      sref5.shipment_refnum_value
    ELSE
      ''      
    END) ||    
    (CASE WHEN NOT sref6.shipment_refnum_value IS NULL THEN
      (CASE WHEN NOT sref5.shipment_refnum_value IS NULL THEN
        ', ' || sref6.shipment_refnum_value || CHR(13)
      ELSE
        sref6.shipment_refnum_value || CHR(13)
      END)
    ELSE
      '' || CHR(13)     
    END) ||    
    (CASE WHEN NOT sref7.shipment_refnum_value IS NULL THEN
      sref7.shipment_refnum_value
    ELSE
      ''      
    END)
  END)
  buyer_address,
  (SELECT DISTINCT gtmr.refnum_value
  FROM shipment_involved_party sip
  INNER JOIN contact c
  ON c.contact_gid = sip.involved_party_contact_gid
  LEFT OUTER JOIN gtm_party_refnum gtmr
  ON gtmr.contact_gid = c.contact_gid
  AND gtmr.gtm_party_refnum_qual_gid = 'TAX ID NUMBER'
  WHERE sip.shipment_gid = s.shipment_gid
  AND sip.involved_party_qual_gid = 'CUSTOMER'
  AND ROWNUM = 1)
  tax_id_number,
	TO_CHAR(s.sail_date, 'DD-MON-YY') 
  sail_date,
  srem2.remark_text
  credit_no,
  srem1.remark_text
  comments,
  TRIM(TO_CHAR(ROUND(s.total_net_weight,3),'999,999,990.000'))
  quantity,
  srn.shipment_refnum_value
  booking_no,
  cv.voyage_name || ' ' || cvr1.charter_voyage_refnum_value
  vessel_voyage,
  (CASE WHEN loc1.location_gid IS NULL THEN
    loc5.location_name
  ELSE
    loc1.location_name
  END)
  load_port,
  (CASE WHEN loc2.location_gid IS NULL THEN
    loc6.location_name
  ELSE
    loc2.location_name
  END)
  discharge_port,
  loc3.location_name
  place_of_delivery
FROM
	shipment s
LEFT OUTER JOIN
	shipment_refnum srn ON srn.shipment_gid = s.shipment_gid
AND
	srn.shipment_refnum_qual_gid = 'CHARTER VOYAGE'
LEFT OUTER JOIN
	charter_voyage cv ON cv.charter_voyage_gid = 'SCOULAR/BCO.' || srn.shipment_refnum_value
LEFT OUTER JOIN
  charter_voyage_refnum cvr1 ON cv.charter_voyage_gid = cvr1.charter_voyage_gid
AND
  cvr1.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_VOYAGE_NUMBER'
LEFT OUTER JOIN
  charter_voyage_refnum cvr2 ON cv.charter_voyage_gid = cvr2.charter_voyage_gid
AND
  cvr2.charter_voyage_refnum_qual_gid = 'SCOULAR/BCO.VIA_LOCATION_ID'
LEFT OUTER JOIN
  location loc1 ON cvr2.charter_voyage_refnum_value = loc1.location_xid
LEFT OUTER JOIN
  charter_voyage_refnum cvr3 ON cv.charter_voyage_gid = cvr3.charter_voyage_gid
AND
  cvr3.charter_voyage_refnum_qual_gid = 'SCOULAR.CHARVOY_VIA_PORT_OF_DISCHARGE'
LEFT OUTER JOIN
  location loc2 ON cvr3.charter_voyage_refnum_value = loc2.location_xid  
LEFT OUTER JOIN
  location loc3 ON cv.dest_location_gid = loc3.location_gid    
LEFT OUTER JOIN
  shipment_refnum sref1 ON s.shipment_gid = sref1.shipment_gid
AND
  sref1.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONSIGNEE NAME'
LEFT OUTER JOIN
  shipment_refnum sref2 ON s.shipment_gid = sref2.shipment_gid
AND
  sref2.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS ADDRESS LINE 1'
LEFT OUTER JOIN
  shipment_refnum sref3 ON s.shipment_gid = sref3.shipment_gid
AND
  sref3.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS ADDRESS LINE 2'
LEFT OUTER JOIN
  shipment_refnum sref4 ON s.shipment_gid = sref4.shipment_gid
AND
  sref4.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS ADDRESS LINE 3'
LEFT OUTER JOIN
  shipment_refnum sref5 ON s.shipment_gid = sref5.shipment_gid
AND
  sref5.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS CITY'
LEFT OUTER JOIN
  shipment_refnum sref6 ON s.shipment_gid = sref6.shipment_gid
AND
  sref6.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS PROVINCE'  
LEFT OUTER JOIN
  shipment_refnum sref7 ON s.shipment_gid = sref7.shipment_gid
AND
  sref7.shipment_refnum_qual_gid = 'SCOULAR/BCO.BCO_SHPMNT PAYTERM_CONS COUNTRY CODE'  
LEFT OUTER JOIN
  shipment_refnum sref8 ON s.shipment_gid = sref8.shipment_gid
AND
  sref8.shipment_refnum_qual_gid = 'SCOULAR/BCO.INVOICE NUMBER'
LEFT OUTER JOIN
  shipment_remark srem1 ON s.shipment_gid = srem1.shipment_gid
AND 
  srem1.remark_qual_gid = 'SCOULAR.MISC NOTES_FI COMMERCIAL INVOICE'
LEFT OUTER JOIN
  shipment_remark srem2 ON s.shipment_gid = srem2.shipment_gid
AND 
  srem2.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_LETTER OF CREDIT NUM'  
LEFT OUTER JOIN
  shipment_involved_party sipc ON s.shipment_gid = sipc.shipment_gid
AND
  sipc.involved_party_qual_gid = 'CUSTOMER'
LEFT OUTER JOIN
  location loc4 ON sipc.involved_party_contact_gid = loc4.location_gid 
LEFT OUTER JOIN
  country_code cc ON loc4.country_code3_gid = cc.country_code3_gid 
LEFT OUTER JOIN
  location loc5 ON cv.source_location_gid = loc5.location_gid   
LEFT OUTER JOIN
  location loc6 ON cv.dest_location_gid = loc6.location_gid   
WHERE
	s.shipment_gid = :SHIPMENT_ID]]></sqlStatement>
    <sqlStatement name="Q_ORDER"><![CDATA[SELECT DISTINCT
  oob.order_base_xid
	contract_no,
  (CASE WHEN obr3.remark_text IS NULL THEN
    obref1.ob_refnum_value
  ELSE
    'MT'
  END)
  uom,
  obr2.remark_text 
	description,
  (CASE WHEN obr3.remark_text IS NULL THEN
    TRIM(TO_CHAR(TO_NUMBER(obref2.ob_refnum_value),'999,999,990.00'))
  ELSE
    TRIM(TO_CHAR(TO_NUMBER(obr3.remark_text),'999,999,990.00'))
  END)
  price,
  (CASE WHEN obr3.remark_text IS NULL THEN
    TRIM(TO_CHAR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2),'999,999,990.00'))
  ELSE
    TRIM(TO_CHAR(ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2),'999,999,990.00'))
  END)
  amount,
  (CASE WHEN obr3.remark_text IS NULL THEN
    (UPPER(
    (CASE WHEN
      --NOTE - TO GET NUMBER TO WORDS, MUST BE FORMATTED AS A DATE - AND THE MAX JULIAN DATE IS 5373484. THIS SHOULD NOT BE AN ISSUE - MAX SHIPMENT IS IN THE $1 MILLION RANGE.
      FLOOR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2)) > 0 AND FLOOR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2)) <= 5373484 THEN TO_CHAR(TO_DATE(FLOOR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2)),	'j'),	'jsp')
    ELSE
      (CASE WHEN 
        FLOOR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2)) > 5373484 
      THEN 
        'ERROR - UNABLE TO CALCULATE' 
      ELSE 
        'ZERO' 
      END)
    END)
		) || ' DOLLARS ' ||	COALESCE(TRIM(TO_CHAR((ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2) * 100) - (FLOOR(ROUND(TO_NUMBER(obref2.ob_refnum_value) * s.total_net_weight,2)) * 100),'00')),'00') || '/100') || ' USD'
  ELSE
    (UPPER(
    (CASE WHEN
      --NOTE - TO GET NUMBER TO WORDS, MUST BE FORMATTED AS A DATE - AND THE MAX JULIAN DATE IS 5373484. THIS SHOULD NOT BE AN ISSUE - MAX SHIPMENT IS IN THE $1 MILLION RANGE.
      FLOOR(ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2)) > 0 AND FLOOR(ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2)) <= 5373484 THEN TO_CHAR(TO_DATE(FLOOR(ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2)),	'j'),	'jsp')
    ELSE
      (CASE WHEN 
        FLOOR(TO_NUMBER(obr3.remark_text) * s.total_net_weight) > 5373484 
      THEN 
        'ERROR - UNABLE TO CALCULATE' 
      ELSE 
        'ZERO' 
      END)
    END)
		) || ' DOLLARS ' ||	COALESCE(TRIM(TO_CHAR((ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2) * 100) - (FLOOR(ROUND(TO_NUMBER(obr3.remark_text) * s.total_net_weight,2)) * 100),'00')),'00') || '/100') || ' USD'
  END)
  amount_in_words
FROM
	shipment s
INNER JOIN
	shipment_s_equipment_join ssej ON s.shipment_gid = ssej.shipment_gid
INNER JOIN
	s_equipment_s_ship_unit_join sessuj ON ssej.s_equipment_gid = sessuj.s_equipment_gid
INNER JOIN
	s_ship_unit_line ssul ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
INNER JOIN
	ob_order_base oob ON ssul.order_base_gid = oob.order_base_gid
LEFT OUTER JOIN
	ob_remark obr2 ON oob.order_base_gid = obr2.order_base_gid
AND
	obr2.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_DESC GOODS SERVICES'
LEFT OUTER JOIN
	ob_remark obr3 ON oob.order_base_gid = obr3.order_base_gid
AND
	obr3.remark_qual_gid = 'SCOULAR/BCO.BCO_PAYTERM_PRICE'
LEFT OUTER JOIN
  ob_refnum obref1 ON oob.order_base_gid = obref1.order_base_gid
AND
  obref1.ob_refnum_qual_gid = 'SCOULAR.PRICE_UOM'
LEFT OUTER JOIN
  ob_refnum obref2 ON oob.order_base_gid = obref2.order_base_gid
AND
  obref2.ob_refnum_qual_gid = 'SCOULAR.CONTRACT_PRICE'
WHERE
	s.shipment_gid = :SHIPMENT_ID
UNION ALL
SELECT
  ''
  contract_no,
  ''
  uom,
  ''
  description,
  ''
  price,
  ''
  amount,
  ''
  amount_in_words
FROM DUAL
WHERE NOT EXISTS
(SELECT
  s.shipment_gid
FROM
	shipment s
LEFT OUTER JOIN
	shipment_s_equipment_join ssej ON s.shipment_gid = ssej.shipment_gid
LEFT OUTER JOIN
	s_equipment_s_ship_unit_join sessuj ON ssej.s_equipment_gid = sessuj.s_equipment_gid
LEFT OUTER JOIN
	s_ship_unit_line ssul ON sessuj.s_ship_unit_gid = ssul.s_ship_unit_gid
LEFT OUTER JOIN
	ob_order_base oob ON ssul.order_base_gid = oob.order_base_gid
WHERE
	s.shipment_gid = :SHIPMENT_ID
AND NOT
  sessuj.s_equipment_gid IS NULL)]]></sqlStatement>
    <sqlStatement name="Q_TOTAL"><![CDATA[SELECT
	TRIM(TRIM(TO_CHAR(SUM(ssur1.refnum_value), '999,999,990')) || ' ' || ssur2.refnum_value)
  bags
FROM
	shipment s
INNER JOIN
	shipment_stop_d sstopd ON s.shipment_gid = sstopd.shipment_gid
AND
	sstopd.stop_num = 1
INNER JOIN
	s_ship_unit ssu ON sstopd.s_ship_unit_gid = ssu.s_ship_unit_gid
AND
	NOT ssu.tag_3 IS NULL
LEFT OUTER JOIN
	s_ship_unit_refnum ssur1 ON ssu.s_ship_unit_gid = ssur1.s_ship_unit_gid
AND
	ssur1.s_ship_unit_refnum_qual_gid = 'SCOULAR.PIECE COUNT'
LEFT OUTER JOIN
	s_ship_unit_refnum ssur2 ON ssu.s_ship_unit_gid = ssur2.s_ship_unit_gid
AND
	ssur2.s_ship_unit_refnum_qual_gid = 'SCOULAR.PIECE TYPE'   
WHERE
	s.shipment_gid = :SHIPMENT_ID
GROUP BY
  ssur2.refnum_value]]></sqlStatement>
  </dataQuery>
</dataTemplate>